{"title":"React学习","slug":"react-1","date":"2022-05-15T11:31:32.000Z","updated":"2024-04-18T15:18:16.849Z","comments":true,"path":"api/articles/react-1.json","excerpt":null,"covers":["https://cloud.mr90.top/hexo/4/78eefc17-fb99-41d5-a230-e0089b427aa2.png","https://cloud.mr90.top/hexo/4/3b62fe19-9b84-404e-94ec-3c6075c05e65.png"],"content":"<blockquote>\n<p>来自B站李立超老师</p>\n</blockquote>\n<h2 id=\"React与传统MVC的关系\"><a href=\"#React与传统MVC的关系\" class=\"headerlink\" title=\"React与传统MVC的关系\"></a>React与传统MVC的关系</h2><ul>\n<li>React不是一个完整的MVC框架，最多可以认为是MVC中的V（View），甚至React并不非常认可MVC开发模式；React 构建页面 UI 的库。可以简单地理解为，React 将界面分成了各个独立的小块，每一个块就是组件，这些组件之间可以组合、嵌套，就成了我们的页面。</li>\n</ul>\n<h2 id=\"React的特性\"><a href=\"#React的特性\" class=\"headerlink\" title=\"React的特性\"></a>React的特性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">特点:</span><br><span class=\"line\">1.声明式设计-React采用声明范式，可以轻松描述应用。</span><br><span class=\"line\">2.高效一React通过对DOM的模拟(虚拟dom),最大限度地减少与DOM的交互。</span><br><span class=\"line\">3.灵活-React可以与已知的库或框架很好地配合。</span><br><span class=\"line\">4.JSX - JSX是JavaScript语法的扩展。</span><br><span class=\"line\">5.组件-通过React构建组件，使得代码更加容易得到复用，能够很好的应用在大项目的开发中。</span><br><span class=\"line\">6.单向响应的数据流- React实现了单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单。</span><br></pre></td></tr></table></figure>\n<h2 id=\"css样式写法\"><a href=\"#css样式写法\" class=\"headerlink\" title=\"css样式写法\"></a>css样式写法</h2><ul>\n<li><a href=\"https://www.lilichao.com/index.php/2022/03/23/react%e4%b8%adcss%e6%a0%b7%e5%bc%8f/\">css写法</a></li>\n</ul>\n<h2 id=\"数据通信\"><a href=\"#数据通信\" class=\"headerlink\" title=\"数据通信\"></a>数据通信</h2><ul>\n<li><a href=\"https://www.lilichao.com/index.php/2022/03/24/context/\">Context</a></li>\n</ul>\n<h2 id=\"effect-副作用\"><a href=\"#effect-副作用\" class=\"headerlink\" title=\"effect(副作用)\"></a>effect(副作用)</h2><ul>\n<li>解决巡回问题</li>\n<li>在react严格模式下 会进行重复调用</li>\n<li><a href=\"https://www.lilichao.com/index.php/2022/05/12/effect/\">effect</a></li>\n</ul>\n<p><img src=\"https://cloud.mr90.top/hexo/4/78eefc17-fb99-41d5-a230-e0089b427aa2.png\"></p>\n<ul>\n<li>使用useEffect() 在组件渲染完成后再执行(每次渲染完成后都调用)  第二个参数 是依赖项 数组形式 当它发生变化时才执行</li>\n<li>如果依赖项设置了一个空数组，则意味Effect只会在组件初始化时触发一次</li>\n</ul>\n<h2 id=\"reducer\"><a href=\"#reducer\" class=\"headerlink\" title=\"reducer\"></a>reducer</h2><ul>\n<li>使用useReducer() 整合函数</li>\n</ul>\n<p><img src=\"https://cloud.mr90.top/hexo/4/3b62fe19-9b84-404e-94ec-3c6075c05e65.png\"></p>\n<h2 id=\"react-memo\"><a href=\"#react-memo\" class=\"headerlink\" title=\"react.memo\"></a>react.memo</h2><ul>\n<li>对组件进行缓冲，只有当组件中的props数据发生变化是才进行重新渲染</li>\n</ul>\n","more":"<blockquote>\n<p>来自B站李立超老师</p>\n</blockquote>\n<h2 id=\"React与传统MVC的关系\"><a href=\"#React与传统MVC的关系\" class=\"headerlink\" title=\"React与传统MVC的关系\"></a>React与传统MVC的关系</h2><ul>\n<li>React不是一个完整的MVC框架，最多可以认为是MVC中的V（View），甚至React并不非常认可MVC开发模式；React 构建页面 UI 的库。可以简单地理解为，React 将界面分成了各个独立的小块，每一个块就是组件，这些组件之间可以组合、嵌套，就成了我们的页面。</li>\n</ul>\n<h2 id=\"React的特性\"><a href=\"#React的特性\" class=\"headerlink\" title=\"React的特性\"></a>React的特性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">特点:</span><br><span class=\"line\">1.声明式设计-React采用声明范式，可以轻松描述应用。</span><br><span class=\"line\">2.高效一React通过对DOM的模拟(虚拟dom),最大限度地减少与DOM的交互。</span><br><span class=\"line\">3.灵活-React可以与已知的库或框架很好地配合。</span><br><span class=\"line\">4.JSX - JSX是JavaScript语法的扩展。</span><br><span class=\"line\">5.组件-通过React构建组件，使得代码更加容易得到复用，能够很好的应用在大项目的开发中。</span><br><span class=\"line\">6.单向响应的数据流- React实现了单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单。</span><br></pre></td></tr></table></figure>\n<h2 id=\"css样式写法\"><a href=\"#css样式写法\" class=\"headerlink\" title=\"css样式写法\"></a>css样式写法</h2><ul>\n<li><a href=\"https://www.lilichao.com/index.php/2022/03/23/react%e4%b8%adcss%e6%a0%b7%e5%bc%8f/\">css写法</a></li>\n</ul>\n<h2 id=\"数据通信\"><a href=\"#数据通信\" class=\"headerlink\" title=\"数据通信\"></a>数据通信</h2><ul>\n<li><a href=\"https://www.lilichao.com/index.php/2022/03/24/context/\">Context</a></li>\n</ul>\n<h2 id=\"effect-副作用\"><a href=\"#effect-副作用\" class=\"headerlink\" title=\"effect(副作用)\"></a>effect(副作用)</h2><ul>\n<li>解决巡回问题</li>\n<li>在react严格模式下 会进行重复调用</li>\n<li><a href=\"https://www.lilichao.com/index.php/2022/05/12/effect/\">effect</a></li>\n</ul>\n<p><img src=\"https://cloud.mr90.top/hexo/4/78eefc17-fb99-41d5-a230-e0089b427aa2.png\"></p>\n<ul>\n<li>使用useEffect() 在组件渲染完成后再执行(每次渲染完成后都调用)  第二个参数 是依赖项 数组形式 当它发生变化时才执行</li>\n<li>如果依赖项设置了一个空数组，则意味Effect只会在组件初始化时触发一次</li>\n</ul>\n<h2 id=\"reducer\"><a href=\"#reducer\" class=\"headerlink\" title=\"reducer\"></a>reducer</h2><ul>\n<li>使用useReducer() 整合函数</li>\n</ul>\n<p><img src=\"https://cloud.mr90.top/hexo/4/3b62fe19-9b84-404e-94ec-3c6075c05e65.png\"></p>\n<h2 id=\"react-memo\"><a href=\"#react-memo\" class=\"headerlink\" title=\"react.memo\"></a>react.memo</h2><ul>\n<li>对组件进行缓冲，只有当组件中的props数据发生变化是才进行重新渲染</li>\n</ul>\n","categories":[{"name":"学习笔记","path":"api/categories/学习笔记.json"},{"name":"react","path":"api/categories/react.json"}],"tags":[]}