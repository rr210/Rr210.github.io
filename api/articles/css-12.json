{"title":"CSS3知识回顾（12）","slug":"css-12","date":"2021-01-14T03:13:02.000Z","updated":"2021-09-04T13:12:38.027Z","comments":true,"path":"api/articles/css-12.json","excerpt":null,"covers":null,"content":"<h2 id=\"rem布局\"><a href=\"#rem布局\" class=\"headerlink\" title=\"rem布局\"></a>rem布局</h2><ol>\n<li><code>em</code>是父元素的大小,字符</li>\n</ol>\n<ul>\n<li>相对与<code>父元素</code>的字体大小</li>\n</ul>\n<ol start=\"2\">\n<li><code>rem</code>的基准是相对于<code>html</code>的字体大小</li>\n</ol>\n<ul>\n<li>优势：可以通过修改html里面的文字大小来改变页面中的元素的大小来整体控制页面</li>\n</ul>\n<h2 id=\"媒体查询\"><a href=\"#媒体查询\" class=\"headerlink\" title=\"媒体查询\"></a>媒体查询</h2><ol>\n<li>可以针对不同的屏幕的尺寸设置不同的样式</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media mediatype and|not|only(media feature)&#123;&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>媒体类型</li>\n</ol>\n<ul>\n<li>all</li>\n<li>print</li>\n<li>scree(用于电脑屏幕，平板，手机)</li>\n</ul>\n<ol start=\"3\">\n<li>关键字</li>\n</ol>\n<ul>\n<li>and</li>\n<li>not</li>\n<li>only</li>\n</ul>\n<ol start=\"3\">\n<li>媒体特性</li>\n</ol>\n<ul>\n<li>max-width/min</li>\n<li><code>从小到大</code>写代码更简洁，使用层叠性</li>\n</ul>\n<ol start=\"4\">\n<li>媒体查询+rem实现元素的动态变化</li>\n<li>媒体查询引入资源link</li>\n</ol>\n<h2 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h2><ol>\n<li>css的扩展语言，Sass,less,Stylus</li>\n<li>less变量</li>\n</ol>\n<ul>\n<li>@color(变量名区分大小写)</li>\n</ul>\n<ol start=\"3\">\n<li>less编译 easy less</li>\n<li>less嵌套子元素的样式直接写道父元素里面就好了</li>\n</ol>\n<ul>\n<li>伪元素要加<code>&amp;</code></li>\n</ul>\n<ol start=\"5\">\n<li>使用less运算方便计算（有空格隔开）</li>\n</ol>\n<ul>\n<li>运算过程中两个都有单位以第一个为准</li>\n</ul>\n<ol start=\"6\">\n<li>import在样式文件中相导入</li>\n</ol>\n<h2 id=\"rem适配方案\"><a href=\"#rem适配方案\" class=\"headerlink\" title=\"rem适配方案\"></a>rem适配方案</h2><ol>\n<li>实现页面元素的自适应，实现等比缩放的适配</li>\n<li>rem适配方案<code>flexible.js</code></li>\n<li>flexible.js在宽度超出750px后使用媒体查询，强制修改宽度为75px</li>\n</ol>\n","more":"<h2 id=\"rem布局\"><a href=\"#rem布局\" class=\"headerlink\" title=\"rem布局\"></a>rem布局</h2><ol>\n<li><code>em</code>是父元素的大小,字符</li>\n</ol>\n<ul>\n<li>相对与<code>父元素</code>的字体大小</li>\n</ul>\n<ol start=\"2\">\n<li><code>rem</code>的基准是相对于<code>html</code>的字体大小</li>\n</ol>\n<ul>\n<li>优势：可以通过修改html里面的文字大小来改变页面中的元素的大小来整体控制页面</li>\n</ul>\n<h2 id=\"媒体查询\"><a href=\"#媒体查询\" class=\"headerlink\" title=\"媒体查询\"></a>媒体查询</h2><ol>\n<li>可以针对不同的屏幕的尺寸设置不同的样式</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media mediatype and|not|only(media feature)&#123;&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>媒体类型</li>\n</ol>\n<ul>\n<li>all</li>\n<li>print</li>\n<li>scree(用于电脑屏幕，平板，手机)</li>\n</ul>\n<ol start=\"3\">\n<li>关键字</li>\n</ol>\n<ul>\n<li>and</li>\n<li>not</li>\n<li>only</li>\n</ul>\n<ol start=\"3\">\n<li>媒体特性</li>\n</ol>\n<ul>\n<li>max-width/min</li>\n<li><code>从小到大</code>写代码更简洁，使用层叠性</li>\n</ul>\n<ol start=\"4\">\n<li>媒体查询+rem实现元素的动态变化</li>\n<li>媒体查询引入资源link</li>\n</ol>\n<h2 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h2><ol>\n<li>css的扩展语言，Sass,less,Stylus</li>\n<li>less变量</li>\n</ol>\n<ul>\n<li>@color(变量名区分大小写)</li>\n</ul>\n<ol start=\"3\">\n<li>less编译 easy less</li>\n<li>less嵌套子元素的样式直接写道父元素里面就好了</li>\n</ol>\n<ul>\n<li>伪元素要加<code>&amp;</code></li>\n</ul>\n<ol start=\"5\">\n<li>使用less运算方便计算（有空格隔开）</li>\n</ol>\n<ul>\n<li>运算过程中两个都有单位以第一个为准</li>\n</ul>\n<ol start=\"6\">\n<li>import在样式文件中相导入</li>\n</ol>\n<h2 id=\"rem适配方案\"><a href=\"#rem适配方案\" class=\"headerlink\" title=\"rem适配方案\"></a>rem适配方案</h2><ol>\n<li>实现页面元素的自适应，实现等比缩放的适配</li>\n<li>rem适配方案<code>flexible.js</code></li>\n<li>flexible.js在宽度超出750px后使用媒体查询，强制修改宽度为75px</li>\n</ol>\n","categories":[{"name":"web","path":"api/categories/web.json"},{"name":"css","path":"api/categories/css.json"}],"tags":[]}