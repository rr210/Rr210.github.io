{"title":"卷积神经网络学习","slug":"convolution","date":"2022-04-15T04:50:59.000Z","updated":"2022-07-04T13:53:59.347Z","comments":true,"path":"api/articles/convolution.json","excerpt":null,"covers":["https://cloud.mr90.top/hexo/4/20220415102757.png","https://cloud.mr90.top/hexo/4/20220415103726.png","https://cloud.mr90.top/hexo/4/20220415104949.png","https://cloud.mr90.top/hexo/4/20220415111153.png"],"content":"<h2 id=\"为什么使用卷积运算\"><a href=\"#为什么使用卷积运算\" class=\"headerlink\" title=\"为什么使用卷积运算\"></a>为什么使用卷积运算</h2><ol>\n<li>使用卷积比全连接网络少很多参数，为了计算高分辨率的图片，很少的参数以便我们可以使用较小的训练集来训练，有利于预防过拟合</li>\n<li>使用卷积就是为了提取显著特征，减少特征维数，减少计算量。</li>\n</ol>\n<h2 id=\"边缘检测\"><a href=\"#边缘检测\" class=\"headerlink\" title=\"边缘检测\"></a>边缘检测</h2><ol>\n<li><ul>\n<li>表示卷积，使用3x3过滤器</li>\n</ul>\n</li>\n<li>如图是垂直边缘检测器<br><img src=\"https://cloud.mr90.top/hexo/4/20220415102757.png\"></li>\n</ol>\n<h2 id=\"正边缘与负边缘\"><a href=\"#正边缘与负边缘\" class=\"headerlink\" title=\"正边缘与负边缘\"></a>正边缘与负边缘</h2><p><img src=\"https://cloud.mr90.top/hexo/4/20220415103726.png\"><br><img src=\"https://cloud.mr90.top/hexo/4/20220415104101.png\"></p>\n<h2 id=\"填充降维度\"><a href=\"#填充降维度\" class=\"headerlink\" title=\"填充降维度\"></a>填充降维度</h2><p><img src=\"https://cloud.mr90.top/hexo/4/20220415104949.png\"><br>公式：<code>nxn * fxf = (n-f+1)x(n-f+1)</code></p>\n<ol>\n<li>缺陷：不希望每一步都缩小维度，使得图片丢失了许多边界的信息</li>\n<li>解决方法：填充图片扩大图片，给图片增加边框像素也就是 给一个padding为一像素</li>\n<li>公式就变成了：<code>n+2p-f+1=n</code>如果让填充后的图片进行卷积等于原来图片的大小 <code>p=(f-1)/2</code> 并且过滤器建议使奇数</li>\n</ol>\n<h2 id=\"带步长的卷积\"><a href=\"#带步长的卷积\" class=\"headerlink\" title=\"带步长的卷积\"></a>带步长的卷积</h2><ol>\n<li>公式：<code>(n+2p-f)/s+1</code> 带步长卷积后的维度大小，除不尽可以向下取整<code>floor=⌊ ⌋</code></li>\n<li>总结公式：<code>⌊(n+2p-f)/s+1⌋ * ⌊(n+2p-f)/s+1⌋</code></li>\n</ol>\n<h2 id=\"三维卷积\"><a href=\"#三维卷积\" class=\"headerlink\" title=\"三维卷积\"></a>三维卷积</h2><ol>\n<li>使用rgb图片 则是三通道（red,green,blue）<br><img src=\"https://cloud.mr90.top/hexo/4/20220415111153.png\"></li>\n</ol>\n<h2 id=\"卷积神经网络结构\"><a href=\"#卷积神经网络结构\" class=\"headerlink\" title=\"卷积神经网络结构\"></a>卷积神经网络结构</h2><ol>\n<li>卷积神经网络主要由这几类层构成：输入层、卷积层，ReLU层、池化（Pooling）层和全连接层（全连接层和常规神经网络中的一样）。</li>\n</ol>\n","more":"<h2 id=\"为什么使用卷积运算\"><a href=\"#为什么使用卷积运算\" class=\"headerlink\" title=\"为什么使用卷积运算\"></a>为什么使用卷积运算</h2><ol>\n<li>使用卷积比全连接网络少很多参数，为了计算高分辨率的图片，很少的参数以便我们可以使用较小的训练集来训练，有利于预防过拟合</li>\n<li>使用卷积就是为了提取显著特征，减少特征维数，减少计算量。</li>\n</ol>\n<h2 id=\"边缘检测\"><a href=\"#边缘检测\" class=\"headerlink\" title=\"边缘检测\"></a>边缘检测</h2><ol>\n<li><ul>\n<li>表示卷积，使用3x3过滤器</li>\n</ul>\n</li>\n<li>如图是垂直边缘检测器<br><img src=\"https://cloud.mr90.top/hexo/4/20220415102757.png\"></li>\n</ol>\n<h2 id=\"正边缘与负边缘\"><a href=\"#正边缘与负边缘\" class=\"headerlink\" title=\"正边缘与负边缘\"></a>正边缘与负边缘</h2><p><img src=\"https://cloud.mr90.top/hexo/4/20220415103726.png\"><br><img src=\"https://cloud.mr90.top/hexo/4/20220415104101.png\"></p>\n<h2 id=\"填充降维度\"><a href=\"#填充降维度\" class=\"headerlink\" title=\"填充降维度\"></a>填充降维度</h2><p><img src=\"https://cloud.mr90.top/hexo/4/20220415104949.png\"><br>公式：<code>nxn * fxf = (n-f+1)x(n-f+1)</code></p>\n<ol>\n<li>缺陷：不希望每一步都缩小维度，使得图片丢失了许多边界的信息</li>\n<li>解决方法：填充图片扩大图片，给图片增加边框像素也就是 给一个padding为一像素</li>\n<li>公式就变成了：<code>n+2p-f+1=n</code>如果让填充后的图片进行卷积等于原来图片的大小 <code>p=(f-1)/2</code> 并且过滤器建议使奇数</li>\n</ol>\n<h2 id=\"带步长的卷积\"><a href=\"#带步长的卷积\" class=\"headerlink\" title=\"带步长的卷积\"></a>带步长的卷积</h2><ol>\n<li>公式：<code>(n+2p-f)/s+1</code> 带步长卷积后的维度大小，除不尽可以向下取整<code>floor=⌊ ⌋</code></li>\n<li>总结公式：<code>⌊(n+2p-f)/s+1⌋ * ⌊(n+2p-f)/s+1⌋</code></li>\n</ol>\n<h2 id=\"三维卷积\"><a href=\"#三维卷积\" class=\"headerlink\" title=\"三维卷积\"></a>三维卷积</h2><ol>\n<li>使用rgb图片 则是三通道（red,green,blue）<br><img src=\"https://cloud.mr90.top/hexo/4/20220415111153.png\"></li>\n</ol>\n<h2 id=\"卷积神经网络结构\"><a href=\"#卷积神经网络结构\" class=\"headerlink\" title=\"卷积神经网络结构\"></a>卷积神经网络结构</h2><ol>\n<li>卷积神经网络主要由这几类层构成：输入层、卷积层，ReLU层、池化（Pooling）层和全连接层（全连接层和常规神经网络中的一样）。</li>\n</ol>\n","categories":[{"name":"python","path":"api/categories/python.json"}],"tags":[]}