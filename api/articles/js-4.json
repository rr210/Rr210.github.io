{"title":"JavaScript的知识整理(4)","slug":"js-4","date":"2021-01-19T01:58:25.000Z","updated":"2021-09-04T12:35:31.239Z","comments":true,"path":"api/articles/js-4.json","excerpt":null,"covers":null,"content":"<h2 id=\"arguments的作用\"><a href=\"#arguments的作用\" class=\"headerlink\" title=\"arguments的作用\"></a>arguments的作用</h2><ol>\n<li>具有数字的length属性</li>\n<li>按照索引的方式进行存储的</li>\n<li>他没有真正数组的一些方法pop()push()等等</li>\n<li>里面村粗了所有传递过来的实参,伪数组</li>\n<li>只有函数才有arguments对象</li>\n</ol>\n<h2 id=\"arguments的使用\"><a href=\"#arguments的使用\" class=\"headerlink\" title=\"arguments的使用\"></a>arguments的使用</h2><ol>\n<li>利用函数求任意个数的最大值</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMax</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"built_in\">arguments</span>.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">arguments</span>[i] &gt; max)&#123;</span><br><span class=\"line\">            max = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getMax(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">31</span>,<span class=\"number\">231</span>,<span class=\"number\">3</span>,<span class=\"number\">21</span>,<span class=\"number\">412</span>,<span class=\"number\">12</span>));</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"2\">\n<li>翻转数组</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverse</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = arr.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        newArr[newArr.length] = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = reverse([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">31</span>,<span class=\"number\">412</span>,<span class=\"number\">3124</span>])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1)</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"3\">\n<li>冒泡排序</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sort</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length -<span class=\"number\">1</span>; i++)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt;= arr.length - i - <span class=\"number\">1</span>; j++)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (arr[j]&gt;arr[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                 <span class=\"keyword\">var</span> temp = arr[j];</span><br><span class=\"line\">                 arr[j] = arr[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                 arr[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = sort([<span class=\"number\">2</span>,<span class=\"number\">121</span>,<span class=\"number\">411</span>,<span class=\"number\">2312</span>,<span class=\"number\">51</span>,<span class=\"number\">312</span>,<span class=\"number\">12</span>,<span class=\"number\">31</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">12412</span>]);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1);</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"4\">\n<li>闰年函数封装</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isRunYear</span>(<span class=\"params\">year</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span> || year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isRunYear(<span class=\"number\">2000</span>));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isRunYear(<span class=\"number\">1999</span>));</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"4\">\n<li>判断年份的2月份天数,函数封装</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">backDay</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> year = prompt(<span class=\"string\">&#x27;请输入年份&#x27;</span>);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (isRunYear())&#123;</span><br><span class=\"line\">       alert(<span class=\"string\">&#x27;您输入的年份&#x27;</span>+year+<span class=\"string\">&#x27;年&#x27;</span>+<span class=\"string\">&#x27;是闰年，2月份有29天&#x27;</span>)</span><br><span class=\"line\">   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">       alert(<span class=\"string\">&#x27;您输入的年份&#x27;</span>+year+<span class=\"string\">&#x27;年&#x27;</span>+<span class=\"string\">&#x27;是平年2月份有28天&#x27;</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">backDay();</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isRunYear</span>(<span class=\"params\">year</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span> || year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">         flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"函数声明方式\"><a href=\"#函数声明方式\" class=\"headerlink\" title=\"函数声明方式\"></a>函数声明方式</h2><ol>\n<li>利用函数关键字自定义函数(命名函数)<code>function fn()&#123;&#125;</code></li>\n<li>函数表达式I(匿名函数)<code>var fn = function()&#123;&#125;</code></li>\n</ol>\n<ul>\n<li>函数表达式里面存的是函数</li>\n<li>函数表达式也可以进行传递参数</li>\n</ul>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><ol>\n<li>代码名字变量在某个范围内起作用和效果目的是为了提高程序的可靠性</li>\n<li>更重要的是<code>减少命名冲突</code></li>\n<li>全局作用域,局部作用域</li>\n<li>全局变量,在全局作用下的变量 在全局下都可以使用,<code>如果在函数内部不声明直接使用</code>属于全局变量,全局变量比较占内存资源</li>\n<li>局部作用 在局部作用域下的变量,只能在函数内部输出,函数形参也可以看做局部变量</li>\n<li>块级作用域 <code>if&#123;&#125; for&#123;&#125;</code></li>\n</ol>\n<p><span class=\"inline-tag grey\">全局作用域</span></p>\n<blockquote>\n<p>整个script,或者在一个单独的文件</p>\n</blockquote>\n<p><span class=\"inline-tag grey\">局部作用域</span></p>\n<blockquote>\n<p>在函数内部起效果</p>\n</blockquote>\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><ol>\n<li><code>内部函数</code>访问<code>外部函数</code>的变量,采取的是<code>链式查找</code>的方式来决定取值</li>\n<li>就近原则</li>\n</ol>\n<h2 id=\"预解析\"><a href=\"#预解析\" class=\"headerlink\" title=\"预解析\"></a>预解析</h2><ol>\n<li>js引擎运行: 预解析 代码执行</li>\n<li>把所有的var和funtion提升到当前作用域的最前面</li>\n<li>从上到下执行</li>\n<li>预解析 分为变量预解析,函数预解析</li>\n<li>变量提升: 不提升赋值</li>\n<li>函数提升: 不调用函数</li>\n<li>函数表达式,调用必须写在函数表达式下面</li>\n</ol>\n<details green><summary> <p>域解析经典案例</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f1();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;c&#x27;</span>+c);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;b&#x27;</span>+b);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a&#x27;</span>+a);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = b = c = <span class=\"number\">9</span>;  <span class=\"comment\">/*相当于var a = 9; b=9; c=9;b和c未定义,为全局变量,a为局部变量,外面无法调用*/</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a&#x27;</span>+a);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;b&#x27;</span>+b);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;c&#x27;</span>+c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><ol>\n<li>一组无序的相关属性和方法,属性十五的特征,方法事物的行为</li>\n<li>创建对象,利用字面量<code> var obj = &#123;&#125;</code>键值对</li>\n<li>方法冒号后面跟的是一个匿名函数</li>\n<li>调用属性的方法<code> 对象名.属性名</code>  <code>对象名[&#39;属性名&#39;]</code></li>\n<li>调用对象的方法 <code>对象名.函数名</code></li>\n</ol>\n<h2 id=\"变量-属性-函数-方法的区别\"><a href=\"#变量-属性-函数-方法的区别\" class=\"headerlink\" title=\"变量,属性,函数,方法的区别\"></a>变量,属性,函数,方法的区别</h2><ol>\n<li>变量 单独声明并赋值, 使用的时候直接写变量名,单独存在</li>\n<li>属性 在对象里面的不需要声明,使用的时候必须是 对象.属性</li>\n</ol>\n<h3 id=\"函数和方法\"><a href=\"#函数和方法\" class=\"headerlink\" title=\"函数和方法\"></a>函数和方法</h3><ol>\n<li>都是实现某种功能</li>\n<li>函数是单独声明,并且 调用的 函数名() 单独存在的</li>\n<li>方法 在对象里面调用的时候 对象.方法()</li>\n</ol>\n<h2 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h2><ol>\n<li>创建对象,利用字面量<code> var obj = &#123;&#125;</code>键值对</li>\n<li>利用new Object创建对象<code>var obj = new Object();</code></li>\n<li>利用函数方法重复相同的代码 构造函数,把相同的属性和方法抽取出来封装到函数中</li>\n<li>语法格式</li>\n</ol>\n<ul>\n<li>构造函数的</li>\n</ul>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function 构造函数名()&#123;</span><br><span class=\"line\">\tthis.属性 &#x3D; 值;</span><br><span class=\"line\">\tthis.方法 &#x3D; function()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol>\n<li>写公共的属性,构造函数名字首字母要大写</li>\n<li>我们构造函数不需要return,就可以返回结果,使用形参和实参,<code>new</code>生成对象</li>\n<li>属性和方法前必须添加<code>this</code></li>\n<li>利用构造函数创建对象的过程称为<code>对象的实例化</code></li>\n</ol>\n<p>new</p>\n<ol>\n<li>在内存中创建了一个新的空对象</li>\n<li>让this指向这个新的对象</li>\n<li>执行构造函数里面的代码,给这个新对象添加属性和方法</li>\n<li>返回这个新对象,构造函数里面不需要return</li>\n</ol>\n<h2 id=\"遍历对象\"><a href=\"#遍历对象\" class=\"headerlink\" title=\"遍历对象\"></a>遍历对象</h2><ol>\n<li>for..in  <code>for(变量 in 对象)&#123;&#125;</code>,一般使用k/key</li>\n<li>for..in语句用于对对象的属性进行循环操作</li>\n</ol>\n","more":"<h2 id=\"arguments的作用\"><a href=\"#arguments的作用\" class=\"headerlink\" title=\"arguments的作用\"></a>arguments的作用</h2><ol>\n<li>具有数字的length属性</li>\n<li>按照索引的方式进行存储的</li>\n<li>他没有真正数组的一些方法pop()push()等等</li>\n<li>里面村粗了所有传递过来的实参,伪数组</li>\n<li>只有函数才有arguments对象</li>\n</ol>\n<h2 id=\"arguments的使用\"><a href=\"#arguments的使用\" class=\"headerlink\" title=\"arguments的使用\"></a>arguments的使用</h2><ol>\n<li>利用函数求任意个数的最大值</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMax</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"built_in\">arguments</span>.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">arguments</span>[i] &gt; max)&#123;</span><br><span class=\"line\">            max = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getMax(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">31</span>,<span class=\"number\">231</span>,<span class=\"number\">3</span>,<span class=\"number\">21</span>,<span class=\"number\">412</span>,<span class=\"number\">12</span>));</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"2\">\n<li>翻转数组</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverse</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = arr.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        newArr[newArr.length] = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = reverse([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">31</span>,<span class=\"number\">412</span>,<span class=\"number\">3124</span>])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1)</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"3\">\n<li>冒泡排序</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sort</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length -<span class=\"number\">1</span>; i++)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt;= arr.length - i - <span class=\"number\">1</span>; j++)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (arr[j]&gt;arr[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                 <span class=\"keyword\">var</span> temp = arr[j];</span><br><span class=\"line\">                 arr[j] = arr[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                 arr[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = sort([<span class=\"number\">2</span>,<span class=\"number\">121</span>,<span class=\"number\">411</span>,<span class=\"number\">2312</span>,<span class=\"number\">51</span>,<span class=\"number\">312</span>,<span class=\"number\">12</span>,<span class=\"number\">31</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">12412</span>]);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1);</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"4\">\n<li>闰年函数封装</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isRunYear</span>(<span class=\"params\">year</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span> || year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isRunYear(<span class=\"number\">2000</span>));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isRunYear(<span class=\"number\">1999</span>));</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol start=\"4\">\n<li>判断年份的2月份天数,函数封装</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">backDay</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> year = prompt(<span class=\"string\">&#x27;请输入年份&#x27;</span>);</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (isRunYear())&#123;</span><br><span class=\"line\">       alert(<span class=\"string\">&#x27;您输入的年份&#x27;</span>+year+<span class=\"string\">&#x27;年&#x27;</span>+<span class=\"string\">&#x27;是闰年，2月份有29天&#x27;</span>)</span><br><span class=\"line\">   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">       alert(<span class=\"string\">&#x27;您输入的年份&#x27;</span>+year+<span class=\"string\">&#x27;年&#x27;</span>+<span class=\"string\">&#x27;是平年2月份有28天&#x27;</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">backDay();</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isRunYear</span>(<span class=\"params\">year</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span> || year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">         flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"函数声明方式\"><a href=\"#函数声明方式\" class=\"headerlink\" title=\"函数声明方式\"></a>函数声明方式</h2><ol>\n<li>利用函数关键字自定义函数(命名函数)<code>function fn()&#123;&#125;</code></li>\n<li>函数表达式I(匿名函数)<code>var fn = function()&#123;&#125;</code></li>\n</ol>\n<ul>\n<li>函数表达式里面存的是函数</li>\n<li>函数表达式也可以进行传递参数</li>\n</ul>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><ol>\n<li>代码名字变量在某个范围内起作用和效果目的是为了提高程序的可靠性</li>\n<li>更重要的是<code>减少命名冲突</code></li>\n<li>全局作用域,局部作用域</li>\n<li>全局变量,在全局作用下的变量 在全局下都可以使用,<code>如果在函数内部不声明直接使用</code>属于全局变量,全局变量比较占内存资源</li>\n<li>局部作用 在局部作用域下的变量,只能在函数内部输出,函数形参也可以看做局部变量</li>\n<li>块级作用域 <code>if&#123;&#125; for&#123;&#125;</code></li>\n</ol>\n<p><span class=\"inline-tag grey\">全局作用域</span></p>\n<blockquote>\n<p>整个script,或者在一个单独的文件</p>\n</blockquote>\n<p><span class=\"inline-tag grey\">局部作用域</span></p>\n<blockquote>\n<p>在函数内部起效果</p>\n</blockquote>\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><ol>\n<li><code>内部函数</code>访问<code>外部函数</code>的变量,采取的是<code>链式查找</code>的方式来决定取值</li>\n<li>就近原则</li>\n</ol>\n<h2 id=\"预解析\"><a href=\"#预解析\" class=\"headerlink\" title=\"预解析\"></a>预解析</h2><ol>\n<li>js引擎运行: 预解析 代码执行</li>\n<li>把所有的var和funtion提升到当前作用域的最前面</li>\n<li>从上到下执行</li>\n<li>预解析 分为变量预解析,函数预解析</li>\n<li>变量提升: 不提升赋值</li>\n<li>函数提升: 不调用函数</li>\n<li>函数表达式,调用必须写在函数表达式下面</li>\n</ol>\n<details green><summary> <p>域解析经典案例</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f1();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;c&#x27;</span>+c);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;b&#x27;</span>+b);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a&#x27;</span>+a);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = b = c = <span class=\"number\">9</span>;  <span class=\"comment\">/*相当于var a = 9; b=9; c=9;b和c未定义,为全局变量,a为局部变量,外面无法调用*/</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;a&#x27;</span>+a);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;b&#x27;</span>+b);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;c&#x27;</span>+c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><ol>\n<li>一组无序的相关属性和方法,属性十五的特征,方法事物的行为</li>\n<li>创建对象,利用字面量<code> var obj = &#123;&#125;</code>键值对</li>\n<li>方法冒号后面跟的是一个匿名函数</li>\n<li>调用属性的方法<code> 对象名.属性名</code>  <code>对象名[&#39;属性名&#39;]</code></li>\n<li>调用对象的方法 <code>对象名.函数名</code></li>\n</ol>\n<h2 id=\"变量-属性-函数-方法的区别\"><a href=\"#变量-属性-函数-方法的区别\" class=\"headerlink\" title=\"变量,属性,函数,方法的区别\"></a>变量,属性,函数,方法的区别</h2><ol>\n<li>变量 单独声明并赋值, 使用的时候直接写变量名,单独存在</li>\n<li>属性 在对象里面的不需要声明,使用的时候必须是 对象.属性</li>\n</ol>\n<h3 id=\"函数和方法\"><a href=\"#函数和方法\" class=\"headerlink\" title=\"函数和方法\"></a>函数和方法</h3><ol>\n<li>都是实现某种功能</li>\n<li>函数是单独声明,并且 调用的 函数名() 单独存在的</li>\n<li>方法 在对象里面调用的时候 对象.方法()</li>\n</ol>\n<h2 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h2><ol>\n<li>创建对象,利用字面量<code> var obj = &#123;&#125;</code>键值对</li>\n<li>利用new Object创建对象<code>var obj = new Object();</code></li>\n<li>利用函数方法重复相同的代码 构造函数,把相同的属性和方法抽取出来封装到函数中</li>\n<li>语法格式</li>\n</ol>\n<ul>\n<li>构造函数的</li>\n</ul>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function 构造函数名()&#123;</span><br><span class=\"line\">\tthis.属性 &#x3D; 值;</span><br><span class=\"line\">\tthis.方法 &#x3D; function()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<ol>\n<li>写公共的属性,构造函数名字首字母要大写</li>\n<li>我们构造函数不需要return,就可以返回结果,使用形参和实参,<code>new</code>生成对象</li>\n<li>属性和方法前必须添加<code>this</code></li>\n<li>利用构造函数创建对象的过程称为<code>对象的实例化</code></li>\n</ol>\n<p>new</p>\n<ol>\n<li>在内存中创建了一个新的空对象</li>\n<li>让this指向这个新的对象</li>\n<li>执行构造函数里面的代码,给这个新对象添加属性和方法</li>\n<li>返回这个新对象,构造函数里面不需要return</li>\n</ol>\n<h2 id=\"遍历对象\"><a href=\"#遍历对象\" class=\"headerlink\" title=\"遍历对象\"></a>遍历对象</h2><ol>\n<li>for..in  <code>for(变量 in 对象)&#123;&#125;</code>,一般使用k/key</li>\n<li>for..in语句用于对对象的属性进行循环操作</li>\n</ol>\n","categories":[{"name":"web","path":"api/categories/web.json"},{"name":"Javascript","path":"api/categories/Javascript.json"}],"tags":[]}