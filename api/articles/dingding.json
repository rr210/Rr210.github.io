{"title":"利用钉钉群机器人实现定时发送群消息","slug":"dingding","date":"2021-01-11T03:17:29.000Z","updated":"2022-07-20T13:37:05.913Z","comments":true,"path":"api/articles/dingding.json","excerpt":null,"covers":["https://cloud.mr90.top/hexo/3/dasdawddscxx.jpeg","https://cloud.mr90.top/hexo/3/wdasaWdA.jpeg","https://cloud.mr90.top/hexo/3/dawsdasdjrks.jpeg"],"content":"<div class=\"snote link blue fa-atom faa-horizontal animated\"><p>利用钉钉群自定义机器人实现钉钉群内仿签到功能，缺点无后台统计记录，实现方法有多种借助云服务器或者GitHub action来实现定时通知功能，消息形式多样化文本，卡片等等</p></div>\n\n<h2 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h2><p><img src=\"https://cloud.mr90.top/hexo/3/dasdawddscxx.jpeg\"></p>\n<ul>\n<li>此项目已上传到<a href=\"https://github.com/Rr210/dingding\">Github</a>开源</li>\n</ul>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li>准备一个钉钉群并加入群自定义钉钉机器人</li>\n<li>设置钉钉机器人方法看<a href=\"https://ding-doc.dingtalk.com/document/app/custom-robot-access\">钉钉官方文档</a>即可</li>\n<li>云服务器或者本地电脑，都没有的话，注册使用GitHub实现（使用方法二）</li>\n</ol>\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><p><span class=\"inline-tag yellow\">云服务器实现定时发送钉钉群消息</span></p>\n<h3 id=\"云服务器\"><a href=\"#云服务器\" class=\"headerlink\" title=\"云服务器\"></a>云服务器</h3><ol>\n<li>使用云服务器(宝塔) （me菜鸟专属）</li>\n<li>还可以使用云函数（这里我就不写了，感兴趣可以自己去研究研究）我懒<del>_</del></li>\n<li>打开宝塔 找到计划任务将代码填入即可</li>\n<li>代码看<a href=\"https://ding-doc.dingtalk.com/document/app/custom-robot-access\">钉钉官方文档</a>或者去我<a href=\"https://github.com/Rr210/dingding/tree/master/curl\">GitHub项目</a>复制</li>\n<li>可以使用<code>宝塔webhook</code>测试代码是否执行，宝塔自带</li>\n</ol>\n<p><img src=\"https://cloud.mr90.top/hexo/3/wdasaWdA.jpeg\"></p>\n<h3 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"定时任务\"></a>定时任务</h3><ol>\n<li>第一种是使用宝塔的计划任务，直接定时即可</li>\n<li>第二种是使用<a href=\"https://www.runoob.com/w3cnote/linux-crontab-tasks.html\">Liunx系统的Crontab定时任务</a></li>\n</ol>\n<h3 id=\"仿群签到\"><a href=\"#仿群签到\" class=\"headerlink\" title=\"仿群签到\"></a>仿群签到</h3><blockquote>\n<p>由于学校开始了钉钉群的健康打卡统计，我是属于那种比较懒的，老是错过签到，懂得都懂嘿嘿，所以突发奇想搞了一个仿签到，也就是利用钉钉自带的机器人实现群消息通知，改了改源码，变成自己的签到通知，缺点就是无法实现钉钉后台的统计，但是这难不倒我，已经有了新的方法<a href=\"/posts/24e42e9f/\">看这看这</a></p>\n</blockquote>\n<details green><summary> <p>查看钉钉仿签到代码</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\">curl &#39;https:&#x2F;&#x2F;oapi.dingtalk.com&#x2F;robot&#x2F;send?access_token&#x3D;xxxxxx&#39; \\</span><br><span class=\"line\">   -H &#39;Content-Type: application&#x2F;json&#39; \\</span><br><span class=\"line\">   -d &#39;&#123;</span><br><span class=\"line\">     &quot;msgtype&quot;: &quot;markdown&quot;,</span><br><span class=\"line\">     &quot;markdown&quot;: &#123;</span><br><span class=\"line\">         &quot;title&quot;:&quot;xxx的签到机器人&quot;,</span><br><span class=\"line\">         &quot;text&quot;: &quot;##### 签到 (xxx的签到机器人) \\n #### xxx在xx省xx市xx市签到 \\n&gt; ##### 签到时间：**19:00** \\n&gt; ##### 备注：**健康** \\n&gt; ##### 体温：**36.5** \\n&gt; ##### 家庭住址与现住址是否一样：**是** \\n&gt; ##### 是否接触过病例患者：**否** \\n&gt; ![screenshot](https:&#x2F;&#x2F;cdn.mr90.top&#x2F;demo&#x2F;wxpagecover&#x2F;0&#x2F;%E4%B8%8B%E8%BD%BD.jpg)\\n&gt; ###### 19点发布 [Harry](https:&#x2F;&#x2F;u.mr90.top) \\n&quot;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">      &quot;at&quot;: &#123;</span><br><span class=\"line\">          &quot;atMobiles&quot;: [</span><br><span class=\"line\">              &quot;&quot;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          &quot;isAtAll&quot;: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"> &#125;&#39;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<details green><summary> <p>查看演示效果</p> </summary>\n              <div class='content'>\n              <p>![]<a href=\"https://cloud.mr90.top/hexo/3/dawfasdaadda.jpeg\">https://cloud.mr90.top/hexo/3/dawfasdaadda.jpeg</a>)</p>\n              </div>\n            </details>\n\n<ul>\n<li>如果创建的是python文件，可以点击查看代码<a href=\"https://github.com/Rr210/dingding/tree/master/Python\">.py</a></li>\n</ul>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p><span class=\"inline-tag green\">Github实现定时发送钉钉群消息</span></p>\n<h3 id=\"使用GitHub\"><a href=\"#使用GitHub\" class=\"headerlink\" title=\"使用GitHub\"></a>使用GitHub</h3><ol>\n<li>使用<code>GitHub action</code>定时运行<code>.py</code>文件来实现钉钉机器人定时发送群消息</li>\n<li>创建一个GitHub仓库，新建一个要执行的.py文件名称自定,比如(run.py)</li>\n</ol>\n<details green><summary> <p>查看GitHub.py代码</p> </summary>\n              <div class='content'>\n              <ul><li>这里可以去我的GitHub仓库查看.py文件复制即可</li><li>这里我还是以群仿签到代码为例，markdown形式的</li><li>代码如下</li></ul><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> hmac</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"></span><br><span class=\"line\">timestamp = <span class=\"built_in\">str</span>(<span class=\"built_in\">round</span>(time.time() * <span class=\"number\">1000</span>))</span><br><span class=\"line\">secret = <span class=\"string\">&#x27;这里是密码//可以使用变量secrets.GITHUB_SECTET,自己定义&#x27;</span></span><br><span class=\"line\">secret_enc = secret.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">string_to_sign = <span class=\"string\">&#x27;&#123;&#125;\\n&#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(timestamp, secret)</span><br><span class=\"line\">string_to_sign_enc = string_to_sign.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">hmac_code = hmac.new(secret_enc, string_to_sign_enc, digestmod=hashlib.sha256).digest()</span><br><span class=\"line\">sign = urllib.parse.quote_plus(base64.b64encode(hmac_code))</span><br><span class=\"line\"><span class=\"comment\">#print(timestamp)</span></span><br><span class=\"line\"><span class=\"comment\">#print(sign)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests,json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#导入依赖库</span></span><br><span class=\"line\">headers=&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;   <span class=\"comment\">#定义数据类型</span></span><br><span class=\"line\"><span class=\"comment\">#截至到&amp;timestamp之前</span></span><br><span class=\"line\">webhook = <span class=\"string\">&#x27;这里是钉钉机器人的webhook地址,也可以使用变量[GITHUB_url]自己定义具有保密性&amp;timestamp=&#x27;</span>+timestamp+<span class=\"string\">&quot;&amp;sign=&quot;</span>+sign</span><br><span class=\"line\"><span class=\"comment\">#定义要发送的数据</span></span><br><span class=\"line\"><span class=\"comment\">#&quot;at&quot;: &#123;&quot;atMobiles&quot;: &quot;[&#x27;&quot;+ mobile + &quot;&#x27;]&quot;</span></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    <span class=\"comment\">#定义内容</span></span><br><span class=\"line\"><span class=\"string\">&quot;msgtype&quot;</span>: <span class=\"string\">&quot;markdown&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;markdown&quot;</span>: &#123;</span><br><span class=\"line\">         <span class=\"string\">&quot;title&quot;</span>:<span class=\"string\">&quot;xxx的签到机器人&quot;</span>,</span><br><span class=\"line\">         <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;##### 签到 (xxx的签到机器人) \\n #### xxx在xx省xx市xx市签到 \\n&gt; ##### 签到时间：**19:00** \\n&gt; ##### 备注：**健康** \\n&gt; ##### 体温：**36.5** \\n&gt; ##### 家庭住址与现住址是否一样：**是** \\n&gt; ##### 是否接触过病例患者：**否** \\n&gt; ![screenshot](xxxxxxx)\\n&gt; ###### 19点发布 [Harry](https://u.mr90.top) \\n&quot;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">      &#125;   </span><br><span class=\"line\">res = requests.post(webhook, data=json.dumps(data), headers=headers)   <span class=\"comment\">#发送post请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(res.text)</span><br></pre></td></tr></table></figure><ul><li>演示效果同上就不展示了</li></ul>\n              </div>\n            </details>\n\n<h3 id=\"实现定时效果\"><a href=\"#实现定时效果\" class=\"headerlink\" title=\"实现定时效果\"></a>实现定时效果</h3><ol>\n<li>在本地git仓库创建<code>.github\\workflows\\xxx.yml</code>文件,加入以下代码</li>\n<li>或者直接点击创建的GitHub项目的<code>Action</code></li>\n</ol>\n<p><img src=\"https://cloud.mr90.top/hexo/3/dawsdasdjrks.jpeg\"></p>\n<details green><summary> <p>查看.yml代码配置</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># This workflow will install Python dependencies, run tests and lint with a single version of Python</span></span><br><span class=\"line\"><span class=\"comment\"># For more information see 想了解更多可以点这里看官方文档: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># name随便定义自拟</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Dingding</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\"><span class=\"comment\">#这里是使用定时任务，可百度指令，如有需要将`#`去掉即可</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule:</span></span><br><span class=\"line\">    <span class=\"comment\">#- cron: &quot;0 0/2 * * *&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#这里是如果有人点击你仓库的star 就会执行一次，测试用，不用的时候#掉就可以，以免造成不必要的资源浪费</span></span><br><span class=\"line\">  <span class=\"attr\">watch:</span></span><br><span class=\"line\">    <span class=\"attr\">types:</span> [<span class=\"string\">started</span>]</span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">if:</span> <span class=\"string\">github.event.repository.owner.id</span> <span class=\"string\">==</span> <span class=\"string\">github.event.sender.id</span>  <span class=\"comment\"># 自己点的 start</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Set</span> <span class=\"string\">up</span> <span class=\"string\">Python</span> <span class=\"number\">3.8</span></span><br><span class=\"line\">      <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">      <span class=\"attr\">with:</span></span><br><span class=\"line\">        <span class=\"attr\">python-version:</span> <span class=\"number\">3.8</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">      <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">        <span class=\"string\">python</span> <span class=\"string\">-m</span> <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">--upgrade</span> <span class=\"string\">pip</span></span><br><span class=\"line\">        <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">requests</span> <span class=\"string\">lxml</span></span><br><span class=\"line\">        <span class=\"string\">if</span> [ <span class=\"string\">-f</span> <span class=\"string\">requirements.txt</span> ]<span class=\"string\">;</span> <span class=\"string\">then</span> <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">-r</span> <span class=\"string\">requirements.txt;</span> <span class=\"string\">fi</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">misson</span></span><br><span class=\"line\">    <span class=\"comment\">#这里放路径，就是仓库的文件路径 格式： python 文件路径</span></span><br><span class=\"line\">      <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">        <span class=\"string\">python</span> <span class=\"string\">Python/actioncard.py</span></span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n\n<h2 id=\"分享项目\"><a href=\"#分享项目\" class=\"headerlink\" title=\"分享项目\"></a>分享项目</h2><ul>\n<li>分享一下我的【<a href=\"https://github.com/Rr210/dingding\">GitHub项目</a>】</li>\n<li>喜欢的点个<code>star</code></li>\n</ul>\n","more":"<div class=\"snote link blue fa-atom faa-horizontal animated\"><p>利用钉钉群自定义机器人实现钉钉群内仿签到功能，缺点无后台统计记录，实现方法有多种借助云服务器或者GitHub action来实现定时通知功能，消息形式多样化文本，卡片等等</p></div>\n\n<h2 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h2><p><img src=\"https://cloud.mr90.top/hexo/3/dasdawddscxx.jpeg\"></p>\n<ul>\n<li>此项目已上传到<a href=\"https://github.com/Rr210/dingding\">Github</a>开源</li>\n</ul>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li>准备一个钉钉群并加入群自定义钉钉机器人</li>\n<li>设置钉钉机器人方法看<a href=\"https://ding-doc.dingtalk.com/document/app/custom-robot-access\">钉钉官方文档</a>即可</li>\n<li>云服务器或者本地电脑，都没有的话，注册使用GitHub实现（使用方法二）</li>\n</ol>\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><p><span class=\"inline-tag yellow\">云服务器实现定时发送钉钉群消息</span></p>\n<h3 id=\"云服务器\"><a href=\"#云服务器\" class=\"headerlink\" title=\"云服务器\"></a>云服务器</h3><ol>\n<li>使用云服务器(宝塔) （me菜鸟专属）</li>\n<li>还可以使用云函数（这里我就不写了，感兴趣可以自己去研究研究）我懒<del>_</del></li>\n<li>打开宝塔 找到计划任务将代码填入即可</li>\n<li>代码看<a href=\"https://ding-doc.dingtalk.com/document/app/custom-robot-access\">钉钉官方文档</a>或者去我<a href=\"https://github.com/Rr210/dingding/tree/master/curl\">GitHub项目</a>复制</li>\n<li>可以使用<code>宝塔webhook</code>测试代码是否执行，宝塔自带</li>\n</ol>\n<p><img src=\"https://cloud.mr90.top/hexo/3/wdasaWdA.jpeg\"></p>\n<h3 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"定时任务\"></a>定时任务</h3><ol>\n<li>第一种是使用宝塔的计划任务，直接定时即可</li>\n<li>第二种是使用<a href=\"https://www.runoob.com/w3cnote/linux-crontab-tasks.html\">Liunx系统的Crontab定时任务</a></li>\n</ol>\n<h3 id=\"仿群签到\"><a href=\"#仿群签到\" class=\"headerlink\" title=\"仿群签到\"></a>仿群签到</h3><blockquote>\n<p>由于学校开始了钉钉群的健康打卡统计，我是属于那种比较懒的，老是错过签到，懂得都懂嘿嘿，所以突发奇想搞了一个仿签到，也就是利用钉钉自带的机器人实现群消息通知，改了改源码，变成自己的签到通知，缺点就是无法实现钉钉后台的统计，但是这难不倒我，已经有了新的方法<a href=\"/posts/24e42e9f/\">看这看这</a></p>\n</blockquote>\n<details green><summary> <p>查看钉钉仿签到代码</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\">curl &#39;https:&#x2F;&#x2F;oapi.dingtalk.com&#x2F;robot&#x2F;send?access_token&#x3D;xxxxxx&#39; \\</span><br><span class=\"line\">   -H &#39;Content-Type: application&#x2F;json&#39; \\</span><br><span class=\"line\">   -d &#39;&#123;</span><br><span class=\"line\">     &quot;msgtype&quot;: &quot;markdown&quot;,</span><br><span class=\"line\">     &quot;markdown&quot;: &#123;</span><br><span class=\"line\">         &quot;title&quot;:&quot;xxx的签到机器人&quot;,</span><br><span class=\"line\">         &quot;text&quot;: &quot;##### 签到 (xxx的签到机器人) \\n #### xxx在xx省xx市xx市签到 \\n&gt; ##### 签到时间：**19:00** \\n&gt; ##### 备注：**健康** \\n&gt; ##### 体温：**36.5** \\n&gt; ##### 家庭住址与现住址是否一样：**是** \\n&gt; ##### 是否接触过病例患者：**否** \\n&gt; ![screenshot](https:&#x2F;&#x2F;cdn.mr90.top&#x2F;demo&#x2F;wxpagecover&#x2F;0&#x2F;%E4%B8%8B%E8%BD%BD.jpg)\\n&gt; ###### 19点发布 [Harry](https:&#x2F;&#x2F;u.mr90.top) \\n&quot;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">      &quot;at&quot;: &#123;</span><br><span class=\"line\">          &quot;atMobiles&quot;: [</span><br><span class=\"line\">              &quot;&quot;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          &quot;isAtAll&quot;: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"> &#125;&#39;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<details green><summary> <p>查看演示效果</p> </summary>\n              <div class='content'>\n              <p>![]<a href=\"https://cloud.mr90.top/hexo/3/dawfasdaadda.jpeg\">https://cloud.mr90.top/hexo/3/dawfasdaadda.jpeg</a>)</p>\n              </div>\n            </details>\n\n<ul>\n<li>如果创建的是python文件，可以点击查看代码<a href=\"https://github.com/Rr210/dingding/tree/master/Python\">.py</a></li>\n</ul>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p><span class=\"inline-tag green\">Github实现定时发送钉钉群消息</span></p>\n<h3 id=\"使用GitHub\"><a href=\"#使用GitHub\" class=\"headerlink\" title=\"使用GitHub\"></a>使用GitHub</h3><ol>\n<li>使用<code>GitHub action</code>定时运行<code>.py</code>文件来实现钉钉机器人定时发送群消息</li>\n<li>创建一个GitHub仓库，新建一个要执行的.py文件名称自定,比如(run.py)</li>\n</ol>\n<details green><summary> <p>查看GitHub.py代码</p> </summary>\n              <div class='content'>\n              <ul><li>这里可以去我的GitHub仓库查看.py文件复制即可</li><li>这里我还是以群仿签到代码为例，markdown形式的</li><li>代码如下</li></ul><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> hmac</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"></span><br><span class=\"line\">timestamp = <span class=\"built_in\">str</span>(<span class=\"built_in\">round</span>(time.time() * <span class=\"number\">1000</span>))</span><br><span class=\"line\">secret = <span class=\"string\">&#x27;这里是密码//可以使用变量secrets.GITHUB_SECTET,自己定义&#x27;</span></span><br><span class=\"line\">secret_enc = secret.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">string_to_sign = <span class=\"string\">&#x27;&#123;&#125;\\n&#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(timestamp, secret)</span><br><span class=\"line\">string_to_sign_enc = string_to_sign.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">hmac_code = hmac.new(secret_enc, string_to_sign_enc, digestmod=hashlib.sha256).digest()</span><br><span class=\"line\">sign = urllib.parse.quote_plus(base64.b64encode(hmac_code))</span><br><span class=\"line\"><span class=\"comment\">#print(timestamp)</span></span><br><span class=\"line\"><span class=\"comment\">#print(sign)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests,json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#导入依赖库</span></span><br><span class=\"line\">headers=&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;   <span class=\"comment\">#定义数据类型</span></span><br><span class=\"line\"><span class=\"comment\">#截至到&amp;timestamp之前</span></span><br><span class=\"line\">webhook = <span class=\"string\">&#x27;这里是钉钉机器人的webhook地址,也可以使用变量[GITHUB_url]自己定义具有保密性&amp;timestamp=&#x27;</span>+timestamp+<span class=\"string\">&quot;&amp;sign=&quot;</span>+sign</span><br><span class=\"line\"><span class=\"comment\">#定义要发送的数据</span></span><br><span class=\"line\"><span class=\"comment\">#&quot;at&quot;: &#123;&quot;atMobiles&quot;: &quot;[&#x27;&quot;+ mobile + &quot;&#x27;]&quot;</span></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    <span class=\"comment\">#定义内容</span></span><br><span class=\"line\"><span class=\"string\">&quot;msgtype&quot;</span>: <span class=\"string\">&quot;markdown&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;markdown&quot;</span>: &#123;</span><br><span class=\"line\">         <span class=\"string\">&quot;title&quot;</span>:<span class=\"string\">&quot;xxx的签到机器人&quot;</span>,</span><br><span class=\"line\">         <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;##### 签到 (xxx的签到机器人) \\n #### xxx在xx省xx市xx市签到 \\n&gt; ##### 签到时间：**19:00** \\n&gt; ##### 备注：**健康** \\n&gt; ##### 体温：**36.5** \\n&gt; ##### 家庭住址与现住址是否一样：**是** \\n&gt; ##### 是否接触过病例患者：**否** \\n&gt; ![screenshot](xxxxxxx)\\n&gt; ###### 19点发布 [Harry](https://u.mr90.top) \\n&quot;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">      &#125;   </span><br><span class=\"line\">res = requests.post(webhook, data=json.dumps(data), headers=headers)   <span class=\"comment\">#发送post请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(res.text)</span><br></pre></td></tr></table></figure><ul><li>演示效果同上就不展示了</li></ul>\n              </div>\n            </details>\n\n<h3 id=\"实现定时效果\"><a href=\"#实现定时效果\" class=\"headerlink\" title=\"实现定时效果\"></a>实现定时效果</h3><ol>\n<li>在本地git仓库创建<code>.github\\workflows\\xxx.yml</code>文件,加入以下代码</li>\n<li>或者直接点击创建的GitHub项目的<code>Action</code></li>\n</ol>\n<p><img src=\"https://cloud.mr90.top/hexo/3/dawsdasdjrks.jpeg\"></p>\n<details green><summary> <p>查看.yml代码配置</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># This workflow will install Python dependencies, run tests and lint with a single version of Python</span></span><br><span class=\"line\"><span class=\"comment\"># For more information see 想了解更多可以点这里看官方文档: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># name随便定义自拟</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Dingding</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\"><span class=\"comment\">#这里是使用定时任务，可百度指令，如有需要将`#`去掉即可</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule:</span></span><br><span class=\"line\">    <span class=\"comment\">#- cron: &quot;0 0/2 * * *&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#这里是如果有人点击你仓库的star 就会执行一次，测试用，不用的时候#掉就可以，以免造成不必要的资源浪费</span></span><br><span class=\"line\">  <span class=\"attr\">watch:</span></span><br><span class=\"line\">    <span class=\"attr\">types:</span> [<span class=\"string\">started</span>]</span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">if:</span> <span class=\"string\">github.event.repository.owner.id</span> <span class=\"string\">==</span> <span class=\"string\">github.event.sender.id</span>  <span class=\"comment\"># 自己点的 start</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Set</span> <span class=\"string\">up</span> <span class=\"string\">Python</span> <span class=\"number\">3.8</span></span><br><span class=\"line\">      <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">      <span class=\"attr\">with:</span></span><br><span class=\"line\">        <span class=\"attr\">python-version:</span> <span class=\"number\">3.8</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">      <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">        <span class=\"string\">python</span> <span class=\"string\">-m</span> <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">--upgrade</span> <span class=\"string\">pip</span></span><br><span class=\"line\">        <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">requests</span> <span class=\"string\">lxml</span></span><br><span class=\"line\">        <span class=\"string\">if</span> [ <span class=\"string\">-f</span> <span class=\"string\">requirements.txt</span> ]<span class=\"string\">;</span> <span class=\"string\">then</span> <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">-r</span> <span class=\"string\">requirements.txt;</span> <span class=\"string\">fi</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">misson</span></span><br><span class=\"line\">    <span class=\"comment\">#这里放路径，就是仓库的文件路径 格式： python 文件路径</span></span><br><span class=\"line\">      <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">        <span class=\"string\">python</span> <span class=\"string\">Python/actioncard.py</span></span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n\n<h2 id=\"分享项目\"><a href=\"#分享项目\" class=\"headerlink\" title=\"分享项目\"></a>分享项目</h2><ul>\n<li>分享一下我的【<a href=\"https://github.com/Rr210/dingding\">GitHub项目</a>】</li>\n<li>喜欢的点个<code>star</code></li>\n</ul>\n","categories":[{"name":"技术·教程","path":"api/categories/技术·教程.json"}],"tags":[]}