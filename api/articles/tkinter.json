{"title":"Python GUI之tkinter窗口视窗","slug":"tkinter","date":"2021-04-10T02:42:32.000Z","updated":"2021-09-04T13:28:17.620Z","comments":true,"path":"api/articles/tkinter.json","excerpt":null,"covers":null,"content":"<h2 id=\"tkinter是什么\"><a href=\"#tkinter是什么\" class=\"headerlink\" title=\"tkinter是什么\"></a>tkinter是什么</h2><ol>\n<li>Tkinter 是使用 python 进行窗口视窗设计的模块。Tkinter模块(“Tk 接口”)是Python的标准Tk GUI工具包的接口。作为 python 特定的GUI界面，是一个图像的窗口，tkinter是python 自带的，可以编辑的GUI界面，我们可以用GUI 实现很多直观的功能，比如想开发一个计算器，如果只是一个程序输入，输出窗口的话，是没用用户体验的。所有开发一个图像化的小窗口，就是必要的。</li>\n</ol>\n<h2 id=\"Label标签\"><a href=\"#Label标签\" class=\"headerlink\" title=\"Label标签\"></a>Label标签</h2><ol>\n<li>创建好主窗口才能在上面放置各种控件元素</li>\n<li><code>tk.Lable(window,text=&quot;文本内容&quot;，bg=&#39;背景颜色&#39;,font=(&#39;字体family&#39;,字体大小)),width=标签宽度,height=标签高度 以字符的大小为单位</code></li>\n<li><code>window.title(&#39;窗口名称&#39;)</code></li>\n<li>window.geometry(‘窗口的大小’)</li>\n<li>放置标签x.pack()或者x.place()</li>\n</ol>\n<details green><summary> <p>参考代码</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上设定标签</span></span><br><span class=\"line\">l = tk.Label(window, text=<span class=\"string\">&#x27;你好！this is Tkinter&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">30</span>, height=<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 说明： bg为背景，font为字体，width为长，height为高，这里的长和高是字符的长和高，比如height=2,就是标签有2个字符这么高</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，放置标签</span></span><br><span class=\"line\">l.pack()    <span class=\"comment\"># Label内容content区域放置位置，自动调节尺寸</span></span><br><span class=\"line\"><span class=\"comment\"># 放置lable的方法有：1）l.pack(); 2)l.place();</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br><span class=\"line\"><span class=\"comment\"># 注意，loop因为是循环的意思，window.mainloop就会让window不断的刷新，如果没有mainloop,就是一个静态的window,传入进去的值就不会有循环，mainloop就相当于一个很大的while循环，有个while，每点击一次就会更新一次，所以我们必须要有循环</span></span><br><span class=\"line\"><span class=\"comment\"># 所有的窗口文件都必须有类似的mainloop函数，mainloop是窗口文件的关键的关键。</span></span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Button窗口部件\"><a href=\"#Button窗口部件\" class=\"headerlink\" title=\"Button窗口部件\"></a>Button窗口部件</h2><ol>\n<li>定义一个函数功能（内容自己自由编写），供点击Button按键时调用，调用命令参数command=函数名</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上设定标签</span></span><br><span class=\"line\"><span class=\"comment\"># 说明： bg为背景，font为字体，width为长，height为高，这里的长和高是字符的长和高，比如height=2,就是标签有2个字符这么高</span></span><br><span class=\"line\">var = tk.StringVar()  <span class=\"comment\"># 将label标签的内容设置为字符类型，用var来接收hit_me函数的传出内容用以显示在标签上</span></span><br><span class=\"line\">l = tk.Label(window, textvariable=var, bg=<span class=\"string\">&#x27;green&#x27;</span>, fg=<span class=\"string\">&#x27;white&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">30</span>, height=<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 说明： bg为背景，fg为字体颜色，font为字体，width为长，height为高，这里的长和高是字符的长和高，比如height=2,就是标签有2个字符这么高</span></span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"><span class=\"comment\"># 定义一个函数功能（内容自己自由编写），供点击Button按键时调用，调用命令参数command=函数名</span></span><br><span class=\"line\">on_hit = <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hit_me</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> on_hit</span><br><span class=\"line\">    <span class=\"keyword\">if</span> on_hit == <span class=\"literal\">False</span>:</span><br><span class=\"line\">        on_hit = <span class=\"literal\">True</span></span><br><span class=\"line\">        var.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;you hit me&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        on_hit = <span class=\"literal\">False</span></span><br><span class=\"line\">        var.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 第5步，在窗口界面设置放置Button按键</span></span><br><span class=\"line\">b = tk.Button(window, text=<span class=\"string\">&#x27;hit me&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">10</span>, height=<span class=\"number\">1</span>, command=hit_me)</span><br><span class=\"line\"><span class=\"comment\"># 第5步，放置标签</span></span><br><span class=\"line\"><span class=\"comment\"># x.pack()  # Label内容content区域放置位置，自动调节尺寸</span></span><br><span class=\"line\">b.pack()</span><br><span class=\"line\"><span class=\"comment\"># 放置lable的方法有：1）l.pack(); 2)l.place();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br><span class=\"line\"><span class=\"comment\"># 注意，loop因为是循环的意思，window.mainloop就会让window不断的刷新，如果没有mainloop,就是一个静态的window,传入进去的值就不会有循环，mainloop就相当于一个很大的while循环，有个while，每点击一次就会更新一次，所以我们必须要有循环</span></span><br><span class=\"line\"><span class=\"comment\"># 所有的窗口文件都必须有类似的mainloop函数，mainloop是窗口文件的关键的关键。</span></span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Entry窗口部件\"><a href=\"#Entry窗口部件\" class=\"headerlink\" title=\"Entry窗口部件\"></a>Entry窗口部件</h2><ol>\n<li>Entry是tkinter类中提供的的一个单行文本输入域，用来输入显示一行文本，收集键盘输入(类似 HTML 中的 text)</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e1 = tk.Entry(window, show=<span class=\"string\">&#x27;*&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">14</span>))   <span class=\"comment\"># 显示成密文形式</span></span><br><span class=\"line\">e2 = tk.Entry(window, show=<span class=\"literal\">None</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">14</span>))  <span class=\"comment\"># 显示成明文形式</span></span><br><span class=\"line\">e2.pack()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Text窗口部件\"><a href=\"#Text窗口部件\" class=\"headerlink\" title=\"Text窗口部件\"></a>Text窗口部件</h2><ol>\n<li>Text是tkinter类中提供的的一个多行文本区域，显示多行文本，可用来收集(或显示)用户输入的文字(类似 HTML 中的 textarea)，格式化文本显示，允许你用不同的样式和属性来显示和编辑文本，同时支持内嵌图象和窗口。</li>\n<li>insert 在焦点处插入 ，end 在文本末尾插入数据</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上设定输入框控件entry框并放置</span></span><br><span class=\"line\">e = tk.Entry(window, show=<span class=\"literal\">None</span>)  <span class=\"comment\"># 显示成明文形式</span></span><br><span class=\"line\">e.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义两个触发事件时的函数insert_point和insert_end（注意：因为Python的执行顺序是从上往下，所以函数一定要放在按钮的上面）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_point</span>():</span>  <span class=\"comment\"># 在鼠标焦点处插入输入内容</span></span><br><span class=\"line\">    var = e.get()</span><br><span class=\"line\">    t.insert(<span class=\"string\">&#x27;insert&#x27;</span>, var)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_end</span>():</span>  <span class=\"comment\"># 在文本框内容最后接着插入输入内容</span></span><br><span class=\"line\">    var = e.get()</span><br><span class=\"line\">    t.insert(<span class=\"string\">&#x27;end&#x27;</span>, var)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建并放置两个按钮分别触发两种情况</span></span><br><span class=\"line\">b1 = tk.Button(window, text=<span class=\"string\">&#x27;insert point&#x27;</span>, width=<span class=\"number\">10</span>,</span><br><span class=\"line\">               height=<span class=\"number\">2</span>, command=insert_point)</span><br><span class=\"line\">b1.pack()</span><br><span class=\"line\">b2 = tk.Button(window, text=<span class=\"string\">&#x27;insert end&#x27;</span>, width=<span class=\"number\">10</span>,</span><br><span class=\"line\">               height=<span class=\"number\">2</span>, command=insert_end)</span><br><span class=\"line\">b2.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建并放置一个多行文本框text用以显示，指定height=3为文本框是三个字符高度</span></span><br><span class=\"line\">t = tk.Text(window, height=<span class=\"number\">3</span>)</span><br><span class=\"line\">t.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第8步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Listbox窗口部件\"><a href=\"#Listbox窗口部件\" class=\"headerlink\" title=\"Listbox窗口部件\"></a>Listbox窗口部件</h2><ol>\n<li>Text是tkinter类中提供的的列表框部件，显示供选方案的一个列表。listbox能够被配置来得到radiobutton或checklist的行为。</li>\n<li>lb.get(lb.curselection()) 获取列表选中文本的值</li>\n<li>可以使用insert将值遍历到listbox中</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">var1 = tk.StringVar()  <span class=\"comment\"># 创建变量，用var1用来接收鼠标点击具体选项的内容</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;green&#x27;</span>, fg=<span class=\"string\">&#x27;yellow&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">10</span>, textvariable=var1)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建一个方法用于按钮的点击事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>():</span></span><br><span class=\"line\">    value = lb.get(lb.curselection())  <span class=\"comment\"># 获取当前选中的文本</span></span><br><span class=\"line\">    var1.<span class=\"built_in\">set</span>(value)  <span class=\"comment\"># 为label设置值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个按钮并放置，点击按钮调用print_selection函数</span></span><br><span class=\"line\">b1 = tk.Button(window, text=<span class=\"string\">&#x27;print selection&#x27;</span>, width=<span class=\"number\">15</span>, height=<span class=\"number\">2</span>, command=print_selection)</span><br><span class=\"line\">b1.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建Listbox并为其添加内容</span></span><br><span class=\"line\">var2 = tk.StringVar()</span><br><span class=\"line\">var2.<span class=\"built_in\">set</span>((<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>))  <span class=\"comment\"># 为变量var2设置值</span></span><br><span class=\"line\"><span class=\"comment\"># 创建Listbox</span></span><br><span class=\"line\">lb = tk.Listbox(window, listvariable=var2)  <span class=\"comment\"># 将var2的值赋给Listbox</span></span><br><span class=\"line\"><span class=\"comment\"># 创建一个list并将值循环添加到Listbox控件中</span></span><br><span class=\"line\">list_items = [<span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">44</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_items:</span><br><span class=\"line\">    lb.insert(<span class=\"string\">&#x27;end&#x27;</span>, item)  <span class=\"comment\"># 从最后一个位置开始加入值</span></span><br><span class=\"line\">lb.insert(<span class=\"number\">1</span>, <span class=\"string\">&#x27;first&#x27;</span>)  <span class=\"comment\"># 在第一个位置加入&#x27;first&#x27;字符</span></span><br><span class=\"line\">lb.insert(<span class=\"number\">2</span>, <span class=\"string\">&#x27;second&#x27;</span>)  <span class=\"comment\"># 在第二个位置加入&#x27;second&#x27;字符</span></span><br><span class=\"line\">lb.delete(<span class=\"number\">2</span>)  <span class=\"comment\"># 删除第二个位置的字符</span></span><br><span class=\"line\">lb.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第8步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Radiobutton窗口部件\"><a href=\"#Radiobutton窗口部件\" class=\"headerlink\" title=\"Radiobutton窗口部件\"></a>Radiobutton窗口部件</h2><ol>\n<li>代表一个变量，它可以有多个值中的一个。点击它将为这个变量设置值，并且清除与这同一变量相关的其它radiobutton。类似于单选</li>\n<li>tk.Radiobutton(window, text=’Option A’, variable=var, value=’A’, command=print_selection)</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">var = tk.StringVar()    <span class=\"comment\"># 定义一个var用来将radiobutton的值和Label的值联系在一起.</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;yellow&#x27;</span>, width=<span class=\"number\">20</span>, text=<span class=\"string\">&#x27;empty&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，定义选项触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>():</span></span><br><span class=\"line\">    l.config(text=<span class=\"string\">&#x27;you have selected &#x27;</span> + var.get())</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建三个radiobutton选项，其中variable=var, value=&#x27;A&#x27;的意思就是，当我们鼠标选中了其中一个选项，把value的值A放到变量var中，然后赋值给variable</span></span><br><span class=\"line\">r1 = tk.Radiobutton(window, text=<span class=\"string\">&#x27;Option A&#x27;</span>, variable=var, value=<span class=\"string\">&#x27;A&#x27;</span>, command=print_selection)</span><br><span class=\"line\">r1.pack()</span><br><span class=\"line\">r2 = tk.Radiobutton(window, text=<span class=\"string\">&#x27;Option B&#x27;</span>, variable=var, value=<span class=\"string\">&#x27;B&#x27;</span>, command=print_selection)</span><br><span class=\"line\">r2.pack()</span><br><span class=\"line\">r3 = tk.Radiobutton(window, text=<span class=\"string\">&#x27;Option C&#x27;</span>, variable=var, value=<span class=\"string\">&#x27;C&#x27;</span>, command=print_selection)</span><br><span class=\"line\">r3.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"Checkbutton窗口部件\"><a href=\"#Checkbutton窗口部件\" class=\"headerlink\" title=\"Checkbutton窗口部件\"></a>Checkbutton窗口部件</h2><ol>\n<li>代表一个变量，它有两个不同的值。点击这个按钮将会在这两个值间切换，选择和取消选择。</li>\n<li><code>l.config</code> 将值显示在标签上</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;yellow&#x27;</span>, width=<span class=\"number\">20</span>, text=<span class=\"string\">&#x27;empty&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，定义触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (var1.get() == <span class=\"number\">1</span>) &amp; (var2.get() == <span class=\"number\">0</span>):  <span class=\"comment\"># 如果选中第一个选项，未选中第二个选项</span></span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I love only Python &#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (var1.get() == <span class=\"number\">0</span>) &amp; (var2.get() == <span class=\"number\">1</span>):  <span class=\"comment\"># 如果选中第二个选项，未选中第一个选项</span></span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I love only C++&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (var1.get() == <span class=\"number\">0</span>) &amp; (var2.get() == <span class=\"number\">0</span>):  <span class=\"comment\"># 如果两个选项都未选中</span></span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I do not love either&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I love both&#x27;</span>)  <span class=\"comment\"># 如果两个选项都选中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义两个Checkbutton选项并放置</span></span><br><span class=\"line\">var1 = tk.IntVar()  <span class=\"comment\"># 定义var1和var2整型变量用来存放选择行为返回值</span></span><br><span class=\"line\">var2 = tk.IntVar()</span><br><span class=\"line\">c1 = tk.Checkbutton(window, text=<span class=\"string\">&#x27;Python&#x27;</span>, variable=var1, onvalue=<span class=\"number\">1</span>, offvalue=<span class=\"number\">0</span>,</span><br><span class=\"line\">                    command=print_selection)  <span class=\"comment\"># 传值原理类似于radiobutton部件</span></span><br><span class=\"line\">c1.pack()</span><br><span class=\"line\">c2 = tk.Checkbutton(window, text=<span class=\"string\">&#x27;C++&#x27;</span>, variable=var2, onvalue=<span class=\"number\">1</span>, offvalue=<span class=\"number\">0</span>, command=print_selection)</span><br><span class=\"line\">c2.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"Scale窗口部件\"><a href=\"#Scale窗口部件\" class=\"headerlink\" title=\"Scale窗口部件\"></a>Scale窗口部件</h2><ol>\n<li> 尺度（拉动条），允许你通过滑块来设置一数字值。</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;green&#x27;</span>, fg=<span class=\"string\">&#x27;white&#x27;</span>, width=<span class=\"number\">20</span>, text=<span class=\"string\">&#x27;empty&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，定义一个触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>(<span class=\"params\">v</span>):</span></span><br><span class=\"line\">    l.config(text=<span class=\"string\">&#x27;you have selected &#x27;</span> + v)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个尺度滑条，长度200字符，从0开始10结束，以2为刻度，精度为0.01，触发调用print_selection函数</span></span><br><span class=\"line\">s = tk.Scale(window, label=<span class=\"string\">&#x27;try me&#x27;</span>, from_=<span class=\"number\">0</span>, to=<span class=\"number\">10</span>, orient=tk.HORIZONTAL, length=<span class=\"number\">200</span>, showvalue=<span class=\"number\">0</span>,tickinterval=<span class=\"number\">2</span>, resolution=<span class=\"number\">0.01</span>, command=print_selection)</span><br><span class=\"line\">s.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Canvas窗口部件\"><a href=\"#Canvas窗口部件\" class=\"headerlink\" title=\"Canvas窗口部件\"></a>Canvas窗口部件</h2><ol>\n<li>画布，提供绘图功能(直线、椭圆、多边形、矩形) 可以包含图形或位图，用来绘制图表和图，创建图形编辑器，实现定制窗口部件。</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建 500 * 200 大小的画布并放置各种元素</span></span><br><span class=\"line\">canvas = tk.Canvas(window, bg=<span class=\"string\">&#x27;green&#x27;</span>, height=<span class=\"number\">200</span>, width=<span class=\"number\">500</span>)</span><br><span class=\"line\"><span class=\"comment\"># 说明图片位置，并导入图片到画布上</span></span><br><span class=\"line\">image_file = tk.PhotoImage(file=<span class=\"string\">&#x27;pic.gif&#x27;</span>)  <span class=\"comment\"># 图片位置（相对路径，与.py文件同一文件夹下，也可以用绝对路径，需要给定图片具体绝对路径）</span></span><br><span class=\"line\">image = canvas.create_image(<span class=\"number\">250</span>, <span class=\"number\">0</span>, anchor=<span class=\"string\">&#x27;n&#x27;</span>,image=image_file)        <span class=\"comment\"># 图片锚定点（n图片顶端的中间点位置）放在画布（250,0）坐标处</span></span><br><span class=\"line\"><span class=\"comment\"># 定义多边形参数，然后在画布上画出指定图形</span></span><br><span class=\"line\">x0, y0, x1, y1 = <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">150</span></span><br><span class=\"line\">line = canvas.create_line(x0-<span class=\"number\">50</span>, y0-<span class=\"number\">50</span>, x1-<span class=\"number\">50</span>, y1-<span class=\"number\">50</span>)                   <span class=\"comment\"># 画直线</span></span><br><span class=\"line\">oval = canvas.create_oval(x0+<span class=\"number\">120</span>, y0+<span class=\"number\">50</span>, x1+<span class=\"number\">120</span>, y1+<span class=\"number\">50</span>, fill=<span class=\"string\">&#x27;yellow&#x27;</span>)  <span class=\"comment\"># 画圆 用黄色填充</span></span><br><span class=\"line\">arc = canvas.create_arc(x0, y0+<span class=\"number\">50</span>, x1, y1+<span class=\"number\">50</span>, start=<span class=\"number\">0</span>, extent=<span class=\"number\">180</span>)      <span class=\"comment\"># 画扇形 从0度打开收到180度结束</span></span><br><span class=\"line\">rect = canvas.create_rectangle(<span class=\"number\">330</span>, <span class=\"number\">30</span>, <span class=\"number\">330</span>+<span class=\"number\">20</span>, <span class=\"number\">30</span>+<span class=\"number\">20</span>)                  <span class=\"comment\"># 画矩形正方形</span></span><br><span class=\"line\">canvas.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，触发函数，用来一定指定图形</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">moveit</span>():</span></span><br><span class=\"line\">    canvas.move(rect, <span class=\"number\">2</span>, <span class=\"number\">2</span>) <span class=\"comment\"># 移动正方形rect（也可以改成其他图形名字用以移动一起图形、元素），按每次（x=2, y=2）步长进行移动</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义一个按钮用来移动指定图形的在画布上的位置</span></span><br><span class=\"line\">b = tk.Button(window, text=<span class=\"string\">&#x27;move item&#x27;</span>,command=moveit).pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"Menu窗口部件\"><a href=\"#Menu窗口部件\" class=\"headerlink\" title=\"Menu窗口部件\"></a>Menu窗口部件</h2><details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签用以显示内容并放置</span></span><br><span class=\"line\">l = tk.Label(window, text=<span class=\"string\">&#x27;      &#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第10步，定义一个函数功能，用来代表菜单选项的功能，这里为了操作简单，定义的功能比较简单</span></span><br><span class=\"line\">counter = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_job</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> counter</span><br><span class=\"line\">    l.config(text=<span class=\"string\">&#x27;do &#x27;</span> + <span class=\"built_in\">str</span>(counter))</span><br><span class=\"line\">    counter += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个菜单栏，这里我们可以把他理解成一个容器，在窗口的上方</span></span><br><span class=\"line\">menubar = tk.Menu(window)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建一个File菜单项（默认不下拉，下拉内容包括New，Open，Save，Exit功能项）</span></span><br><span class=\"line\">filemenu = tk.Menu(menubar, tearoff=<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 将上面定义的空菜单命名为File，放在菜单栏中，就是装入那个容器中</span></span><br><span class=\"line\">menubar.add_cascade(label=<span class=\"string\">&#x27;File&#x27;</span>, menu=filemenu)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在File中加入New、Open、Save等小菜单，即我们平时看到的下拉菜单，每一个小菜单对应命令操作。</span></span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;New&#x27;</span>, command=do_job)</span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;Open&#x27;</span>, command=do_job)</span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;Save&#x27;</span>, command=do_job)</span><br><span class=\"line\">filemenu.add_separator()  <span class=\"comment\"># 添加一条分隔线</span></span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;Exit&#x27;</span>, command=window.quit)  <span class=\"comment\"># 用tkinter里面自带的quit()函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建一个Edit菜单项（默认不下拉，下拉内容包括Cut，Copy，Paste功能项）</span></span><br><span class=\"line\">editmenu = tk.Menu(menubar, tearoff=<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 将上面定义的空菜单命名为 Edit，放在菜单栏中，就是装入那个容器中</span></span><br><span class=\"line\">menubar.add_cascade(label=<span class=\"string\">&#x27;Edit&#x27;</span>, menu=editmenu)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 同样的在 Edit 中加入Cut、Copy、Paste等小命令功能单元，如果点击这些单元, 就会触发do_job的功能</span></span><br><span class=\"line\">editmenu.add_command(label=<span class=\"string\">&#x27;Cut&#x27;</span>, command=do_job)</span><br><span class=\"line\">editmenu.add_command(label=<span class=\"string\">&#x27;Copy&#x27;</span>, command=do_job)</span><br><span class=\"line\">editmenu.add_command(label=<span class=\"string\">&#x27;Paste&#x27;</span>, command=do_job)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第8步，创建第二级菜单，即菜单项里面的菜单</span></span><br><span class=\"line\">submenu = tk.Menu(filemenu)  <span class=\"comment\"># 和上面定义菜单一样，不过此处实在File上创建一个空的菜单</span></span><br><span class=\"line\">filemenu.add_cascade(label=<span class=\"string\">&#x27;Import&#x27;</span>, menu=submenu, underline=<span class=\"number\">0</span>)  <span class=\"comment\"># 给放入的菜单submenu命名为Import</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第9步，创建第三级菜单命令，即菜单项里面的菜单项里面的菜单命令（有点拗口，笑~~~）</span></span><br><span class=\"line\">submenu.add_command(label=<span class=\"string\">&#x27;Submenu_1&#x27;</span>, command=do_job)  <span class=\"comment\"># 这里和上面创建原理也一样，在Import菜单项中加入一个小菜单命令Submenu_1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第11步，创建菜单栏完成后，配置让菜单栏menubar显示出来</span></span><br><span class=\"line\">window.config(menu=menubar)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第12步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Frame-窗口部件\"><a href=\"#Frame-窗口部件\" class=\"headerlink\" title=\"Frame 窗口部件\"></a>Frame 窗口部件</h2><ol>\n<li>框架，用来承载放置其他GUI元素，就是一个容器，是一个在 Windows 上分离小区域的部件, 它能将 Windows 分成不同的区,然后存放不同的其他部件. 同时一个 Frame 上也能再分成两个 Frame, Frame 可以认为是一种容器.</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签用以显示内容并放置</span></span><br><span class=\"line\">tk.Label(window, text=<span class=\"string\">&#x27;on the window&#x27;</span>, bg=<span class=\"string\">&#x27;red&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">16</span>)).pack()   <span class=\"comment\"># 和前面部件分开创建和放置不同，其实可以创建和放置一步完成</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个主frame，长在主window窗口上</span></span><br><span class=\"line\">frame = tk.Frame(window)</span><br><span class=\"line\">frame.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建第二层框架frame，长在主框架frame上面</span></span><br><span class=\"line\">frame_l = tk.Frame(frame)<span class=\"comment\"># 第二层frame，左frame，长在主frame上</span></span><br><span class=\"line\">frame_r = tk.Frame(frame)<span class=\"comment\"># 第二层frame，右frame，长在主frame上</span></span><br><span class=\"line\">frame_l.pack(side=<span class=\"string\">&#x27;left&#x27;</span>)</span><br><span class=\"line\">frame_r.pack(side=<span class=\"string\">&#x27;right&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建三组标签，为第二层frame上面的内容，分为左区域和右区域，用不同颜色标识</span></span><br><span class=\"line\">tk.Label(frame_l, text=<span class=\"string\">&#x27;on the frame_l1&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_l, text=<span class=\"string\">&#x27;on the frame_l2&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_l, text=<span class=\"string\">&#x27;on the frame_l3&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_r, text=<span class=\"string\">&#x27;on the frame_r1&#x27;</span>, bg=<span class=\"string\">&#x27;yellow&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_r, text=<span class=\"string\">&#x27;on the frame_r2&#x27;</span>, bg=<span class=\"string\">&#x27;yellow&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_r, text=<span class=\"string\">&#x27;on the frame_r3&#x27;</span>, bg=<span class=\"string\">&#x27;yellow&#x27;</span>).pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第8步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"messageBox窗口部件\"><a href=\"#messageBox窗口部件\" class=\"headerlink\" title=\"messageBox窗口部件\"></a>messageBox窗口部件</h2><ol>\n<li>类似于弹窗的操作<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tkinter.messagebox.showinfo(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>)  <span class=\"comment\"># 提示信息对话窗</span></span><br><span class=\"line\">   tkinter.messagebox.showwarning(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;有警告！&#x27;</span>)       <span class=\"comment\"># 提出警告对话窗</span></span><br><span class=\"line\">   tkinter.messagebox.showerror(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;出错了！&#x27;</span>)         <span class=\"comment\"># 提出错误对话窗</span></span><br><span class=\"line\">   print(tkinter.messagebox.askquestion(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># 询问选择对话窗return &#x27;yes&#x27;, &#x27;no&#x27;</span></span><br><span class=\"line\">   print(tkinter.messagebox.askyesno(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))     <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class=\"line\">   print(tkinter.messagebox.askokcancel(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br></pre></td></tr></table></figure>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter.messagebox  <span class=\"comment\"># 要使用messagebox先要导入模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hit_me</span>():</span></span><br><span class=\"line\">    tkinter.messagebox.showinfo(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>)  <span class=\"comment\"># 提示信息对话窗</span></span><br><span class=\"line\">    tkinter.messagebox.showwarning(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;有警告！&#x27;</span>)       <span class=\"comment\"># 提出警告对话窗</span></span><br><span class=\"line\">    tkinter.messagebox.showerror(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;出错了！&#x27;</span>)         <span class=\"comment\"># 提出错误对话窗</span></span><br><span class=\"line\">    print(tkinter.messagebox.askquestion(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># 询问选择对话窗return &#x27;yes&#x27;, &#x27;no&#x27;</span></span><br><span class=\"line\">    print(tkinter.messagebox.askyesno(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))     <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class=\"line\">    print(tkinter.messagebox.askokcancel(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签用以显示内容并放置</span></span><br><span class=\"line\">tk.Button(window, text=<span class=\"string\">&#x27;hit me&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">14</span>), command=hit_me).pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n</li>\n</ol>\n<ul>\n<li><a href=\"https://blog.csdn.net/low5252/article/details/106366257?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-8&spm=1001.2101.3001.4242\">参考文章</a></li>\n</ul>\n","more":"<h2 id=\"tkinter是什么\"><a href=\"#tkinter是什么\" class=\"headerlink\" title=\"tkinter是什么\"></a>tkinter是什么</h2><ol>\n<li>Tkinter 是使用 python 进行窗口视窗设计的模块。Tkinter模块(“Tk 接口”)是Python的标准Tk GUI工具包的接口。作为 python 特定的GUI界面，是一个图像的窗口，tkinter是python 自带的，可以编辑的GUI界面，我们可以用GUI 实现很多直观的功能，比如想开发一个计算器，如果只是一个程序输入，输出窗口的话，是没用用户体验的。所有开发一个图像化的小窗口，就是必要的。</li>\n</ol>\n<h2 id=\"Label标签\"><a href=\"#Label标签\" class=\"headerlink\" title=\"Label标签\"></a>Label标签</h2><ol>\n<li>创建好主窗口才能在上面放置各种控件元素</li>\n<li><code>tk.Lable(window,text=&quot;文本内容&quot;，bg=&#39;背景颜色&#39;,font=(&#39;字体family&#39;,字体大小)),width=标签宽度,height=标签高度 以字符的大小为单位</code></li>\n<li><code>window.title(&#39;窗口名称&#39;)</code></li>\n<li>window.geometry(‘窗口的大小’)</li>\n<li>放置标签x.pack()或者x.place()</li>\n</ol>\n<details green><summary> <p>参考代码</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上设定标签</span></span><br><span class=\"line\">l = tk.Label(window, text=<span class=\"string\">&#x27;你好！this is Tkinter&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">30</span>, height=<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 说明： bg为背景，font为字体，width为长，height为高，这里的长和高是字符的长和高，比如height=2,就是标签有2个字符这么高</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，放置标签</span></span><br><span class=\"line\">l.pack()    <span class=\"comment\"># Label内容content区域放置位置，自动调节尺寸</span></span><br><span class=\"line\"><span class=\"comment\"># 放置lable的方法有：1）l.pack(); 2)l.place();</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br><span class=\"line\"><span class=\"comment\"># 注意，loop因为是循环的意思，window.mainloop就会让window不断的刷新，如果没有mainloop,就是一个静态的window,传入进去的值就不会有循环，mainloop就相当于一个很大的while循环，有个while，每点击一次就会更新一次，所以我们必须要有循环</span></span><br><span class=\"line\"><span class=\"comment\"># 所有的窗口文件都必须有类似的mainloop函数，mainloop是窗口文件的关键的关键。</span></span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Button窗口部件\"><a href=\"#Button窗口部件\" class=\"headerlink\" title=\"Button窗口部件\"></a>Button窗口部件</h2><ol>\n<li>定义一个函数功能（内容自己自由编写），供点击Button按键时调用，调用命令参数command=函数名</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上设定标签</span></span><br><span class=\"line\"><span class=\"comment\"># 说明： bg为背景，font为字体，width为长，height为高，这里的长和高是字符的长和高，比如height=2,就是标签有2个字符这么高</span></span><br><span class=\"line\">var = tk.StringVar()  <span class=\"comment\"># 将label标签的内容设置为字符类型，用var来接收hit_me函数的传出内容用以显示在标签上</span></span><br><span class=\"line\">l = tk.Label(window, textvariable=var, bg=<span class=\"string\">&#x27;green&#x27;</span>, fg=<span class=\"string\">&#x27;white&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">30</span>, height=<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 说明： bg为背景，fg为字体颜色，font为字体，width为长，height为高，这里的长和高是字符的长和高，比如height=2,就是标签有2个字符这么高</span></span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"><span class=\"comment\"># 定义一个函数功能（内容自己自由编写），供点击Button按键时调用，调用命令参数command=函数名</span></span><br><span class=\"line\">on_hit = <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hit_me</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> on_hit</span><br><span class=\"line\">    <span class=\"keyword\">if</span> on_hit == <span class=\"literal\">False</span>:</span><br><span class=\"line\">        on_hit = <span class=\"literal\">True</span></span><br><span class=\"line\">        var.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;you hit me&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        on_hit = <span class=\"literal\">False</span></span><br><span class=\"line\">        var.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 第5步，在窗口界面设置放置Button按键</span></span><br><span class=\"line\">b = tk.Button(window, text=<span class=\"string\">&#x27;hit me&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">10</span>, height=<span class=\"number\">1</span>, command=hit_me)</span><br><span class=\"line\"><span class=\"comment\"># 第5步，放置标签</span></span><br><span class=\"line\"><span class=\"comment\"># x.pack()  # Label内容content区域放置位置，自动调节尺寸</span></span><br><span class=\"line\">b.pack()</span><br><span class=\"line\"><span class=\"comment\"># 放置lable的方法有：1）l.pack(); 2)l.place();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br><span class=\"line\"><span class=\"comment\"># 注意，loop因为是循环的意思，window.mainloop就会让window不断的刷新，如果没有mainloop,就是一个静态的window,传入进去的值就不会有循环，mainloop就相当于一个很大的while循环，有个while，每点击一次就会更新一次，所以我们必须要有循环</span></span><br><span class=\"line\"><span class=\"comment\"># 所有的窗口文件都必须有类似的mainloop函数，mainloop是窗口文件的关键的关键。</span></span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Entry窗口部件\"><a href=\"#Entry窗口部件\" class=\"headerlink\" title=\"Entry窗口部件\"></a>Entry窗口部件</h2><ol>\n<li>Entry是tkinter类中提供的的一个单行文本输入域，用来输入显示一行文本，收集键盘输入(类似 HTML 中的 text)</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e1 = tk.Entry(window, show=<span class=\"string\">&#x27;*&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">14</span>))   <span class=\"comment\"># 显示成密文形式</span></span><br><span class=\"line\">e2 = tk.Entry(window, show=<span class=\"literal\">None</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">14</span>))  <span class=\"comment\"># 显示成明文形式</span></span><br><span class=\"line\">e2.pack()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Text窗口部件\"><a href=\"#Text窗口部件\" class=\"headerlink\" title=\"Text窗口部件\"></a>Text窗口部件</h2><ol>\n<li>Text是tkinter类中提供的的一个多行文本区域，显示多行文本，可用来收集(或显示)用户输入的文字(类似 HTML 中的 textarea)，格式化文本显示，允许你用不同的样式和属性来显示和编辑文本，同时支持内嵌图象和窗口。</li>\n<li>insert 在焦点处插入 ，end 在文本末尾插入数据</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上设定输入框控件entry框并放置</span></span><br><span class=\"line\">e = tk.Entry(window, show=<span class=\"literal\">None</span>)  <span class=\"comment\"># 显示成明文形式</span></span><br><span class=\"line\">e.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义两个触发事件时的函数insert_point和insert_end（注意：因为Python的执行顺序是从上往下，所以函数一定要放在按钮的上面）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_point</span>():</span>  <span class=\"comment\"># 在鼠标焦点处插入输入内容</span></span><br><span class=\"line\">    var = e.get()</span><br><span class=\"line\">    t.insert(<span class=\"string\">&#x27;insert&#x27;</span>, var)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_end</span>():</span>  <span class=\"comment\"># 在文本框内容最后接着插入输入内容</span></span><br><span class=\"line\">    var = e.get()</span><br><span class=\"line\">    t.insert(<span class=\"string\">&#x27;end&#x27;</span>, var)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建并放置两个按钮分别触发两种情况</span></span><br><span class=\"line\">b1 = tk.Button(window, text=<span class=\"string\">&#x27;insert point&#x27;</span>, width=<span class=\"number\">10</span>,</span><br><span class=\"line\">               height=<span class=\"number\">2</span>, command=insert_point)</span><br><span class=\"line\">b1.pack()</span><br><span class=\"line\">b2 = tk.Button(window, text=<span class=\"string\">&#x27;insert end&#x27;</span>, width=<span class=\"number\">10</span>,</span><br><span class=\"line\">               height=<span class=\"number\">2</span>, command=insert_end)</span><br><span class=\"line\">b2.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建并放置一个多行文本框text用以显示，指定height=3为文本框是三个字符高度</span></span><br><span class=\"line\">t = tk.Text(window, height=<span class=\"number\">3</span>)</span><br><span class=\"line\">t.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第8步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Listbox窗口部件\"><a href=\"#Listbox窗口部件\" class=\"headerlink\" title=\"Listbox窗口部件\"></a>Listbox窗口部件</h2><ol>\n<li>Text是tkinter类中提供的的列表框部件，显示供选方案的一个列表。listbox能够被配置来得到radiobutton或checklist的行为。</li>\n<li>lb.get(lb.curselection()) 获取列表选中文本的值</li>\n<li>可以使用insert将值遍历到listbox中</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">var1 = tk.StringVar()  <span class=\"comment\"># 创建变量，用var1用来接收鼠标点击具体选项的内容</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;green&#x27;</span>, fg=<span class=\"string\">&#x27;yellow&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">12</span>), width=<span class=\"number\">10</span>, textvariable=var1)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建一个方法用于按钮的点击事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>():</span></span><br><span class=\"line\">    value = lb.get(lb.curselection())  <span class=\"comment\"># 获取当前选中的文本</span></span><br><span class=\"line\">    var1.<span class=\"built_in\">set</span>(value)  <span class=\"comment\"># 为label设置值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个按钮并放置，点击按钮调用print_selection函数</span></span><br><span class=\"line\">b1 = tk.Button(window, text=<span class=\"string\">&#x27;print selection&#x27;</span>, width=<span class=\"number\">15</span>, height=<span class=\"number\">2</span>, command=print_selection)</span><br><span class=\"line\">b1.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建Listbox并为其添加内容</span></span><br><span class=\"line\">var2 = tk.StringVar()</span><br><span class=\"line\">var2.<span class=\"built_in\">set</span>((<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>))  <span class=\"comment\"># 为变量var2设置值</span></span><br><span class=\"line\"><span class=\"comment\"># 创建Listbox</span></span><br><span class=\"line\">lb = tk.Listbox(window, listvariable=var2)  <span class=\"comment\"># 将var2的值赋给Listbox</span></span><br><span class=\"line\"><span class=\"comment\"># 创建一个list并将值循环添加到Listbox控件中</span></span><br><span class=\"line\">list_items = [<span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">44</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_items:</span><br><span class=\"line\">    lb.insert(<span class=\"string\">&#x27;end&#x27;</span>, item)  <span class=\"comment\"># 从最后一个位置开始加入值</span></span><br><span class=\"line\">lb.insert(<span class=\"number\">1</span>, <span class=\"string\">&#x27;first&#x27;</span>)  <span class=\"comment\"># 在第一个位置加入&#x27;first&#x27;字符</span></span><br><span class=\"line\">lb.insert(<span class=\"number\">2</span>, <span class=\"string\">&#x27;second&#x27;</span>)  <span class=\"comment\"># 在第二个位置加入&#x27;second&#x27;字符</span></span><br><span class=\"line\">lb.delete(<span class=\"number\">2</span>)  <span class=\"comment\"># 删除第二个位置的字符</span></span><br><span class=\"line\">lb.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第8步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Radiobutton窗口部件\"><a href=\"#Radiobutton窗口部件\" class=\"headerlink\" title=\"Radiobutton窗口部件\"></a>Radiobutton窗口部件</h2><ol>\n<li>代表一个变量，它可以有多个值中的一个。点击它将为这个变量设置值，并且清除与这同一变量相关的其它radiobutton。类似于单选</li>\n<li>tk.Radiobutton(window, text=’Option A’, variable=var, value=’A’, command=print_selection)</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">var = tk.StringVar()    <span class=\"comment\"># 定义一个var用来将radiobutton的值和Label的值联系在一起.</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;yellow&#x27;</span>, width=<span class=\"number\">20</span>, text=<span class=\"string\">&#x27;empty&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，定义选项触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>():</span></span><br><span class=\"line\">    l.config(text=<span class=\"string\">&#x27;you have selected &#x27;</span> + var.get())</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建三个radiobutton选项，其中variable=var, value=&#x27;A&#x27;的意思就是，当我们鼠标选中了其中一个选项，把value的值A放到变量var中，然后赋值给variable</span></span><br><span class=\"line\">r1 = tk.Radiobutton(window, text=<span class=\"string\">&#x27;Option A&#x27;</span>, variable=var, value=<span class=\"string\">&#x27;A&#x27;</span>, command=print_selection)</span><br><span class=\"line\">r1.pack()</span><br><span class=\"line\">r2 = tk.Radiobutton(window, text=<span class=\"string\">&#x27;Option B&#x27;</span>, variable=var, value=<span class=\"string\">&#x27;B&#x27;</span>, command=print_selection)</span><br><span class=\"line\">r2.pack()</span><br><span class=\"line\">r3 = tk.Radiobutton(window, text=<span class=\"string\">&#x27;Option C&#x27;</span>, variable=var, value=<span class=\"string\">&#x27;C&#x27;</span>, command=print_selection)</span><br><span class=\"line\">r3.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"Checkbutton窗口部件\"><a href=\"#Checkbutton窗口部件\" class=\"headerlink\" title=\"Checkbutton窗口部件\"></a>Checkbutton窗口部件</h2><ol>\n<li>代表一个变量，它有两个不同的值。点击这个按钮将会在这两个值间切换，选择和取消选择。</li>\n<li><code>l.config</code> 将值显示在标签上</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;yellow&#x27;</span>, width=<span class=\"number\">20</span>, text=<span class=\"string\">&#x27;empty&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，定义触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (var1.get() == <span class=\"number\">1</span>) &amp; (var2.get() == <span class=\"number\">0</span>):  <span class=\"comment\"># 如果选中第一个选项，未选中第二个选项</span></span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I love only Python &#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (var1.get() == <span class=\"number\">0</span>) &amp; (var2.get() == <span class=\"number\">1</span>):  <span class=\"comment\"># 如果选中第二个选项，未选中第一个选项</span></span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I love only C++&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (var1.get() == <span class=\"number\">0</span>) &amp; (var2.get() == <span class=\"number\">0</span>):  <span class=\"comment\"># 如果两个选项都未选中</span></span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I do not love either&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        l.config(text=<span class=\"string\">&#x27;I love both&#x27;</span>)  <span class=\"comment\"># 如果两个选项都选中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义两个Checkbutton选项并放置</span></span><br><span class=\"line\">var1 = tk.IntVar()  <span class=\"comment\"># 定义var1和var2整型变量用来存放选择行为返回值</span></span><br><span class=\"line\">var2 = tk.IntVar()</span><br><span class=\"line\">c1 = tk.Checkbutton(window, text=<span class=\"string\">&#x27;Python&#x27;</span>, variable=var1, onvalue=<span class=\"number\">1</span>, offvalue=<span class=\"number\">0</span>,</span><br><span class=\"line\">                    command=print_selection)  <span class=\"comment\"># 传值原理类似于radiobutton部件</span></span><br><span class=\"line\">c1.pack()</span><br><span class=\"line\">c2 = tk.Checkbutton(window, text=<span class=\"string\">&#x27;C++&#x27;</span>, variable=var2, onvalue=<span class=\"number\">1</span>, offvalue=<span class=\"number\">0</span>, command=print_selection)</span><br><span class=\"line\">c2.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"Scale窗口部件\"><a href=\"#Scale窗口部件\" class=\"headerlink\" title=\"Scale窗口部件\"></a>Scale窗口部件</h2><ol>\n<li> 尺度（拉动条），允许你通过滑块来设置一数字值。</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签label用以显示并放置</span></span><br><span class=\"line\">l = tk.Label(window, bg=<span class=\"string\">&#x27;green&#x27;</span>, fg=<span class=\"string\">&#x27;white&#x27;</span>, width=<span class=\"number\">20</span>, text=<span class=\"string\">&#x27;empty&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，定义一个触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_selection</span>(<span class=\"params\">v</span>):</span></span><br><span class=\"line\">    l.config(text=<span class=\"string\">&#x27;you have selected &#x27;</span> + v)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个尺度滑条，长度200字符，从0开始10结束，以2为刻度，精度为0.01，触发调用print_selection函数</span></span><br><span class=\"line\">s = tk.Scale(window, label=<span class=\"string\">&#x27;try me&#x27;</span>, from_=<span class=\"number\">0</span>, to=<span class=\"number\">10</span>, orient=tk.HORIZONTAL, length=<span class=\"number\">200</span>, showvalue=<span class=\"number\">0</span>,tickinterval=<span class=\"number\">2</span>, resolution=<span class=\"number\">0.01</span>, command=print_selection)</span><br><span class=\"line\">s.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Canvas窗口部件\"><a href=\"#Canvas窗口部件\" class=\"headerlink\" title=\"Canvas窗口部件\"></a>Canvas窗口部件</h2><ol>\n<li>画布，提供绘图功能(直线、椭圆、多边形、矩形) 可以包含图形或位图，用来绘制图表和图，创建图形编辑器，实现定制窗口部件。</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建 500 * 200 大小的画布并放置各种元素</span></span><br><span class=\"line\">canvas = tk.Canvas(window, bg=<span class=\"string\">&#x27;green&#x27;</span>, height=<span class=\"number\">200</span>, width=<span class=\"number\">500</span>)</span><br><span class=\"line\"><span class=\"comment\"># 说明图片位置，并导入图片到画布上</span></span><br><span class=\"line\">image_file = tk.PhotoImage(file=<span class=\"string\">&#x27;pic.gif&#x27;</span>)  <span class=\"comment\"># 图片位置（相对路径，与.py文件同一文件夹下，也可以用绝对路径，需要给定图片具体绝对路径）</span></span><br><span class=\"line\">image = canvas.create_image(<span class=\"number\">250</span>, <span class=\"number\">0</span>, anchor=<span class=\"string\">&#x27;n&#x27;</span>,image=image_file)        <span class=\"comment\"># 图片锚定点（n图片顶端的中间点位置）放在画布（250,0）坐标处</span></span><br><span class=\"line\"><span class=\"comment\"># 定义多边形参数，然后在画布上画出指定图形</span></span><br><span class=\"line\">x0, y0, x1, y1 = <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">150</span></span><br><span class=\"line\">line = canvas.create_line(x0-<span class=\"number\">50</span>, y0-<span class=\"number\">50</span>, x1-<span class=\"number\">50</span>, y1-<span class=\"number\">50</span>)                   <span class=\"comment\"># 画直线</span></span><br><span class=\"line\">oval = canvas.create_oval(x0+<span class=\"number\">120</span>, y0+<span class=\"number\">50</span>, x1+<span class=\"number\">120</span>, y1+<span class=\"number\">50</span>, fill=<span class=\"string\">&#x27;yellow&#x27;</span>)  <span class=\"comment\"># 画圆 用黄色填充</span></span><br><span class=\"line\">arc = canvas.create_arc(x0, y0+<span class=\"number\">50</span>, x1, y1+<span class=\"number\">50</span>, start=<span class=\"number\">0</span>, extent=<span class=\"number\">180</span>)      <span class=\"comment\"># 画扇形 从0度打开收到180度结束</span></span><br><span class=\"line\">rect = canvas.create_rectangle(<span class=\"number\">330</span>, <span class=\"number\">30</span>, <span class=\"number\">330</span>+<span class=\"number\">20</span>, <span class=\"number\">30</span>+<span class=\"number\">20</span>)                  <span class=\"comment\"># 画矩形正方形</span></span><br><span class=\"line\">canvas.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，触发函数，用来一定指定图形</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">moveit</span>():</span></span><br><span class=\"line\">    canvas.move(rect, <span class=\"number\">2</span>, <span class=\"number\">2</span>) <span class=\"comment\"># 移动正方形rect（也可以改成其他图形名字用以移动一起图形、元素），按每次（x=2, y=2）步长进行移动</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义一个按钮用来移动指定图形的在画布上的位置</span></span><br><span class=\"line\">b = tk.Button(window, text=<span class=\"string\">&#x27;move item&#x27;</span>,command=moveit).pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n\n<h2 id=\"Menu窗口部件\"><a href=\"#Menu窗口部件\" class=\"headerlink\" title=\"Menu窗口部件\"></a>Menu窗口部件</h2><details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签用以显示内容并放置</span></span><br><span class=\"line\">l = tk.Label(window, text=<span class=\"string\">&#x27;      &#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\">l.pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第10步，定义一个函数功能，用来代表菜单选项的功能，这里为了操作简单，定义的功能比较简单</span></span><br><span class=\"line\">counter = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_job</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> counter</span><br><span class=\"line\">    l.config(text=<span class=\"string\">&#x27;do &#x27;</span> + <span class=\"built_in\">str</span>(counter))</span><br><span class=\"line\">    counter += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个菜单栏，这里我们可以把他理解成一个容器，在窗口的上方</span></span><br><span class=\"line\">menubar = tk.Menu(window)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建一个File菜单项（默认不下拉，下拉内容包括New，Open，Save，Exit功能项）</span></span><br><span class=\"line\">filemenu = tk.Menu(menubar, tearoff=<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 将上面定义的空菜单命名为File，放在菜单栏中，就是装入那个容器中</span></span><br><span class=\"line\">menubar.add_cascade(label=<span class=\"string\">&#x27;File&#x27;</span>, menu=filemenu)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在File中加入New、Open、Save等小菜单，即我们平时看到的下拉菜单，每一个小菜单对应命令操作。</span></span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;New&#x27;</span>, command=do_job)</span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;Open&#x27;</span>, command=do_job)</span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;Save&#x27;</span>, command=do_job)</span><br><span class=\"line\">filemenu.add_separator()  <span class=\"comment\"># 添加一条分隔线</span></span><br><span class=\"line\">filemenu.add_command(label=<span class=\"string\">&#x27;Exit&#x27;</span>, command=window.quit)  <span class=\"comment\"># 用tkinter里面自带的quit()函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建一个Edit菜单项（默认不下拉，下拉内容包括Cut，Copy，Paste功能项）</span></span><br><span class=\"line\">editmenu = tk.Menu(menubar, tearoff=<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 将上面定义的空菜单命名为 Edit，放在菜单栏中，就是装入那个容器中</span></span><br><span class=\"line\">menubar.add_cascade(label=<span class=\"string\">&#x27;Edit&#x27;</span>, menu=editmenu)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 同样的在 Edit 中加入Cut、Copy、Paste等小命令功能单元，如果点击这些单元, 就会触发do_job的功能</span></span><br><span class=\"line\">editmenu.add_command(label=<span class=\"string\">&#x27;Cut&#x27;</span>, command=do_job)</span><br><span class=\"line\">editmenu.add_command(label=<span class=\"string\">&#x27;Copy&#x27;</span>, command=do_job)</span><br><span class=\"line\">editmenu.add_command(label=<span class=\"string\">&#x27;Paste&#x27;</span>, command=do_job)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第8步，创建第二级菜单，即菜单项里面的菜单</span></span><br><span class=\"line\">submenu = tk.Menu(filemenu)  <span class=\"comment\"># 和上面定义菜单一样，不过此处实在File上创建一个空的菜单</span></span><br><span class=\"line\">filemenu.add_cascade(label=<span class=\"string\">&#x27;Import&#x27;</span>, menu=submenu, underline=<span class=\"number\">0</span>)  <span class=\"comment\"># 给放入的菜单submenu命名为Import</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第9步，创建第三级菜单命令，即菜单项里面的菜单项里面的菜单命令（有点拗口，笑~~~）</span></span><br><span class=\"line\">submenu.add_command(label=<span class=\"string\">&#x27;Submenu_1&#x27;</span>, command=do_job)  <span class=\"comment\"># 这里和上面创建原理也一样，在Import菜单项中加入一个小菜单命令Submenu_1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第11步，创建菜单栏完成后，配置让菜单栏menubar显示出来</span></span><br><span class=\"line\">window.config(menu=menubar)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第12步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"Frame-窗口部件\"><a href=\"#Frame-窗口部件\" class=\"headerlink\" title=\"Frame 窗口部件\"></a>Frame 窗口部件</h2><ol>\n<li>框架，用来承载放置其他GUI元素，就是一个容器，是一个在 Windows 上分离小区域的部件, 它能将 Windows 分成不同的区,然后存放不同的其他部件. 同时一个 Frame 上也能再分成两个 Frame, Frame 可以认为是一种容器.</li>\n</ol>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签用以显示内容并放置</span></span><br><span class=\"line\">tk.Label(window, text=<span class=\"string\">&#x27;on the window&#x27;</span>, bg=<span class=\"string\">&#x27;red&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">16</span>)).pack()   <span class=\"comment\"># 和前面部件分开创建和放置不同，其实可以创建和放置一步完成</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第5步，创建一个主frame，长在主window窗口上</span></span><br><span class=\"line\">frame = tk.Frame(window)</span><br><span class=\"line\">frame.pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第6步，创建第二层框架frame，长在主框架frame上面</span></span><br><span class=\"line\">frame_l = tk.Frame(frame)<span class=\"comment\"># 第二层frame，左frame，长在主frame上</span></span><br><span class=\"line\">frame_r = tk.Frame(frame)<span class=\"comment\"># 第二层frame，右frame，长在主frame上</span></span><br><span class=\"line\">frame_l.pack(side=<span class=\"string\">&#x27;left&#x27;</span>)</span><br><span class=\"line\">frame_r.pack(side=<span class=\"string\">&#x27;right&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第7步，创建三组标签，为第二层frame上面的内容，分为左区域和右区域，用不同颜色标识</span></span><br><span class=\"line\">tk.Label(frame_l, text=<span class=\"string\">&#x27;on the frame_l1&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_l, text=<span class=\"string\">&#x27;on the frame_l2&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_l, text=<span class=\"string\">&#x27;on the frame_l3&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_r, text=<span class=\"string\">&#x27;on the frame_r1&#x27;</span>, bg=<span class=\"string\">&#x27;yellow&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_r, text=<span class=\"string\">&#x27;on the frame_r2&#x27;</span>, bg=<span class=\"string\">&#x27;yellow&#x27;</span>).pack()</span><br><span class=\"line\">tk.Label(frame_r, text=<span class=\"string\">&#x27;on the frame_r3&#x27;</span>, bg=<span class=\"string\">&#x27;yellow&#x27;</span>).pack()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 第8步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n\n<h2 id=\"messageBox窗口部件\"><a href=\"#messageBox窗口部件\" class=\"headerlink\" title=\"messageBox窗口部件\"></a>messageBox窗口部件</h2><ol>\n<li>类似于弹窗的操作<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tkinter.messagebox.showinfo(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>)  <span class=\"comment\"># 提示信息对话窗</span></span><br><span class=\"line\">   tkinter.messagebox.showwarning(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;有警告！&#x27;</span>)       <span class=\"comment\"># 提出警告对话窗</span></span><br><span class=\"line\">   tkinter.messagebox.showerror(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;出错了！&#x27;</span>)         <span class=\"comment\"># 提出错误对话窗</span></span><br><span class=\"line\">   print(tkinter.messagebox.askquestion(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># 询问选择对话窗return &#x27;yes&#x27;, &#x27;no&#x27;</span></span><br><span class=\"line\">   print(tkinter.messagebox.askyesno(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))     <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class=\"line\">   print(tkinter.messagebox.askokcancel(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br></pre></td></tr></table></figure>\n<details green><summary> <p>查看答案</p> </summary>\n              <div class='content'>\n              <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># author:洪卫</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter <span class=\"keyword\">as</span> tk  <span class=\"comment\"># 使用Tkinter前需要先导入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tkinter.messagebox  <span class=\"comment\"># 要使用messagebox先要导入模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第1步，实例化object，建立窗口window</span></span><br><span class=\"line\">window = tk.Tk()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第2步，给窗口的可视化起名字</span></span><br><span class=\"line\">window.title(<span class=\"string\">&#x27;My Window&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第3步，设定窗口的大小(长 * 宽)</span></span><br><span class=\"line\">window.geometry(<span class=\"string\">&#x27;500x300&#x27;</span>)  <span class=\"comment\"># 这里的乘是小x</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5步，定义触发函数功能</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hit_me</span>():</span></span><br><span class=\"line\">    tkinter.messagebox.showinfo(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>)  <span class=\"comment\"># 提示信息对话窗</span></span><br><span class=\"line\">    tkinter.messagebox.showwarning(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;有警告！&#x27;</span>)       <span class=\"comment\"># 提出警告对话窗</span></span><br><span class=\"line\">    tkinter.messagebox.showerror(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;出错了！&#x27;</span>)         <span class=\"comment\"># 提出错误对话窗</span></span><br><span class=\"line\">    print(tkinter.messagebox.askquestion(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># 询问选择对话窗return &#x27;yes&#x27;, &#x27;no&#x27;</span></span><br><span class=\"line\">    print(tkinter.messagebox.askyesno(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))     <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class=\"line\">    print(tkinter.messagebox.askokcancel(title=<span class=\"string\">&#x27;Hi&#x27;</span>, message=<span class=\"string\">&#x27;你好！&#x27;</span>))  <span class=\"comment\"># return &#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第4步，在图形界面上创建一个标签用以显示内容并放置</span></span><br><span class=\"line\">tk.Button(window, text=<span class=\"string\">&#x27;hit me&#x27;</span>, bg=<span class=\"string\">&#x27;green&#x27;</span>, font=(<span class=\"string\">&#x27;Arial&#x27;</span>, <span class=\"number\">14</span>), command=hit_me).pack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第6步，主窗口循环显示</span></span><br><span class=\"line\">window.mainloop()</span><br></pre></td></tr></table></figure>\n              </div>\n            </details>\n</li>\n</ol>\n<ul>\n<li><a href=\"https://blog.csdn.net/low5252/article/details/106366257?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-8&spm=1001.2101.3001.4242\">参考文章</a></li>\n</ul>\n","categories":[{"name":"Python","path":"api/categories/Python.json"},{"name":"tkinter","path":"api/categories/tkinter.json"}],"tags":[]}