{"title":"正则表达式（js）","slug":"reg","date":"2021-07-29T00:50:00.000Z","updated":"2021-09-10T12:25:20.205Z","comments":true,"path":"api/articles/reg.json","excerpt":null,"covers":null,"content":"<h2 id=\"正则字符串提取数字\"><a href=\"#正则字符串提取数字\" class=\"headerlink\" title=\"正则字符串提取数字\"></a>正则字符串提取数字</h2><ol>\n<li>使用\\d将数字匹配出来 /g全局匹配</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;daw21321dasda23123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 不使用正则表达式写一个方法</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(Number.isNaN(parseInt(&#x27;1&#x27;)));</span></span><br><span class=\"line\"><span class=\"comment\">// ...将字符串转换成数组形式 Array.from()方法也可以 使用isNaN判断是否为非数字</span></span><br><span class=\"line\"><span class=\"comment\">// let news = [...hd].filter(v=&gt;!Number.isNaN(parseInt(v)));</span></span><br><span class=\"line\"><span class=\"comment\">// 使用join方法连接</span></span><br><span class=\"line\"><span class=\"comment\">// 使用正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> news = hd.match(<span class=\"regexp\">/\\d/g</span>).join(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(news);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"正则字变量\"><a href=\"#正则字变量\" class=\"headerlink\" title=\"正则字变量\"></a>正则字变量</h2><ol>\n<li>使用eval()方法</li>\n<li>使用test()方法返回的是布尔值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;daw21321dasda23123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> news = <span class=\"built_in\">eval</span>(<span class=\"string\">`/<span class=\"subst\">$&#123;a&#125;</span>/`</span>).test(hd)  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(news);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用对象创建\"><a href=\"#使用对象创建\" class=\"headerlink\" title=\"使用对象创建\"></a>使用对象创建</h2><ol>\n<li>替换字符串中匹配到的字符</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span>mr90.top<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">let</span> div = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;.content&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">let</span> a = prompt(<span class=\"string\">&#x27;输入字符&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">let</span> regs = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(a,<span class=\"string\">&quot;g&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">div.innerHTML = div.innerHTML.replace(regs,<span class=\"function\"><span class=\"params\">search</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;span style=&quot;color:red&quot;&gt;<span class=\"subst\">$&#123;search&#125;</span>&lt;/span&gt;`</span></span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"选择符\"><a href=\"#选择符\" class=\"headerlink\" title=\"选择符 |\"></a>选择符 |</h2><ol>\n<li>匹配左右两侧的条件</li>\n<li>原子组()  原子表[]</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">&#x27;023-2312322&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"regexp\">/(023|020)\\-\\d&#123;7,8&#125;/</span>.test(tel)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 重复的条件使用原子组的方法&#123;7，8&#125;表示 7-8位的数字 \\- 表示转义</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(12|34)/</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;31w231&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(reg)); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"转义\"><a href=\"#转义\" class=\"headerlink\" title=\"转义\"></a>转义</h2><ol>\n<li>在字面量里面 使用<code>\\d \\.</code> 将字符可实现转义</li>\n<li>在构造函数中<code>\\d \\.</code> 表示的是该字符 所以 必须再加一个转义符 <code>\\\\d \\\\.</code></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> price = <span class=\"string\">&#x27;12@21&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// . 除换行外的任何字符</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"regexp\">/\\d+.\\d/</span>.test(price)); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">&#x27;\\\\d+\\\\.\\\\d+&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// \\\\ 双转义</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(price)); <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 网址</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">&#x27;https://u.mr90.top&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"regexp\">/https?:\\/\\/\\w+\\.\\w+\\.\\w+/</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(url)); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"regexp\">/https?:\\/\\/\\w+\\.\\w+/</span>.test(url)); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字符边界符\"><a href=\"#字符边界符\" class=\"headerlink\" title=\"字符边界符\"></a>字符边界符</h2><ol>\n<li>边界符表示开始和结尾必须满足条件 <code>/^[a-z]$/</code></li>\n<li><code>&#123;3,6&#125;</code> 加入边界字符 才能控制其数量范围</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;[name=&#x27;user&#x27;]&quot;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    .addEventListener(<span class=\"string\">&#x27;keyup&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> flag = <span class=\"built_in\">this</span>.value.match(<span class=\"regexp\">/^[a-z]&#123;3,6&#125;$/</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(flag);</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数值与空白元字符\"><a href=\"#数值与空白元字符\" class=\"headerlink\" title=\"数值与空白元字符\"></a>数值与空白元字符</h2><ol>\n<li><code>\\d</code> 匹配数字 <code>\\D</code> 匹配非数字</li>\n<li>在原子表中首页<code>^</code>表示非的意思<code>/[^]/</code></li>\n<li><code>\\s</code> 表示匹配空白和换行 <code>\\S</code> 非空白</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;张三:021-9999299,李四:022-2122122&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 匹配所有的数字号码</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/\\d&#123;3&#125;\\-\\d&#123;7,8&#125;/g</span>)); <span class=\"comment\">//[&quot;021-9999299&quot;, &quot;022-2122122&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 匹配姓名 + 表示匹配相邻的符合条件的</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/[^:\\d,-\\s]+/g</span>)); <span class=\"comment\">// [&quot;张三&quot;, &quot;李四&quot;]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"w和W元字符\"><a href=\"#w和W元字符\" class=\"headerlink\" title=\"w和W元字符\"></a>w和W元字符</h2><ol>\n<li><code>\\w</code> 匹配字母和数字 下划线</li>\n<li><code>\\W</code>与之相反</li>\n</ol>\n<h2 id=\"点字符的使用\"><a href=\"#点字符的使用\" class=\"headerlink\" title=\"点字符的使用\"></a>点字符的使用</h2><ol>\n<li>匹配所有字符默认模式下，它匹配除了换行符以外的任意字符。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">`wad\\nawd\\n`</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/.+/g</span>)); <span class=\"comment\">// [wad,awd]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"匹配所有字符\"><a href=\"#匹配所有字符\" class=\"headerlink\" title=\"匹配所有字符\"></a>匹配所有字符</h2><ol>\n<li>在原子组中<code>[\\s\\S]</code> 或者<code>[\\d\\D]</code></li>\n<li>匹配标签使用 <code>/&lt;span&gt;[\\s\\S]+&lt;/span&gt;/</code></li>\n</ol>\n<h2 id=\"i和g-模式修正\"><a href=\"#i和g-模式修正\" class=\"headerlink\" title=\"i和g 模式修正\"></a>i和g 模式修正</h2><ol>\n<li><code>g</code>全局匹配 <code>i</code>不区分大小写</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">#1 js,200元 #</span></span><br><span class=\"line\"><span class=\"string\">#2 php,300元 #</span></span><br><span class=\"line\"><span class=\"string\">#9 mr90.top # 你好</span></span><br><span class=\"line\"><span class=\"string\">#3 node.js,180元 #</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> lessons = hd.match(<span class=\"regexp\">/^\\s*#\\d+\\s+.+\\s+#$/gm</span>).map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">    v = v.replace(<span class=\"regexp\">/\\s*#\\d+\\s*/</span>, <span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"regexp\">/\\s+#/</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [name, price] = v.split(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; name, price &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(lessons);</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">0: &#123;name: &quot;js&quot;, price: &quot;200元&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">1: &#123;name: &quot;php&quot;, price: &quot;300元&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">2: &#123;name: &quot;node.js&quot;, price: &quot;180元&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">length: 3*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"汉字与字符属性\"><a href=\"#汉字与字符属性\" class=\"headerlink\" title=\"汉字与字符属性\"></a>汉字与字符属性</h2><ol>\n<li><code>\\p</code>表示匹配字符</li>\n<li><code>\\P</code> 相反</li>\n</ol>\n<h2 id=\"lastIndex\"><a href=\"#lastIndex\" class=\"headerlink\" title=\"lastIndex\"></a>lastIndex</h2><ol>\n<li>lastIndex 属性用于规定下次匹配的起始位置</li>\n<li><code>exec()</code> 方法用于检索字符串中的正则表达式的匹配。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;dawdaw31&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/\\w/g</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.exec(hd));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.lastIndex); <span class=\"comment\">// lastIndex 属性用于规定下次匹配的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">// 将匹配到的值赋值给res 有值打印数据 否则返回null 不满足循环条件 循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(res=reg.exec(hd))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"y模式\"><a href=\"#y模式\" class=\"headerlink\" title=\"y模式\"></a>y模式</h2><ol>\n<li>后一次匹配都是从上一次匹配成功的下一个位置开始</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd =<span class=\"string\">`你好世界大王大大:11111111,1111231,213123212,</span></span><br><span class=\"line\"><span class=\"string\">达瓦达,网站:u.mr90.top`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(\\d+),?/y</span></span><br><span class=\"line\">reg.lastIndex = <span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> qq = []</span><br><span class=\"line\"><span class=\"comment\">// console.log(reg.exec(hd)); </span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(res=reg.exec(hd)) qq.push(res[<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(qq);</span><br></pre></td></tr></table></figure>\n<h2 id=\"原子表\"><a href=\"#原子表\" class=\"headerlink\" title=\"原子表\"></a>原子表</h2><ol>\n<li><code>[]</code> 匹配中括号内的所有条件</li>\n<li>原子组和原子表搭配使用</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> times = <span class=\"string\">&#x27;2020-02/21&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(times.match(<span class=\"regexp\">/^\\d&#123;4&#125;[-\\/]\\d&#123;2&#125;[-\\/]\\d&#123;2&#125;$/</span>)); <span class=\"comment\">// 2020/02-21</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(times.match(<span class=\"regexp\">/^\\d&#123;4&#125;([-\\/])\\d&#123;2&#125;\\1\\d&#123;2&#125;$/</span>)); <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(times.match(<span class=\"regexp\">/^\\d&#123;4&#125;([-\\/])\\d&#123;2&#125;\\1\\d&#123;2&#125;$/</span>)); <span class=\"comment\">// 2020/02/21</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"区间匹配\"><a href=\"#区间匹配\" class=\"headerlink\" title=\"区间匹配\"></a>区间匹配</h2><ol>\n<li>数字区间<code>[0-9]+</code> 加号表示贪婪模式</li>\n<li>字母区间<code>[a-z]</code></li>\n</ol>\n<h2 id=\"排除匹配\"><a href=\"#排除匹配\" class=\"headerlink\" title=\"排除匹配\"></a>排除匹配</h2><ol>\n<li><code>[^]</code> 表示排除匹配</li>\n<li><code>\\p</code>表示匹配满足<code>&#123;&#125;</code>内的字符</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// let hd = &#x27;u.mr90.top&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(hd.match(/[^u]/gi)); //[&quot;.&quot;, &quot;m&quot;, &quot;r&quot;, &quot;9&quot;, &quot;0&quot;, &quot;.&quot;, &quot;t&quot;, &quot;o&quot;, &quot;p&quot;]</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">`张三:231-23123123,李四#:123-312313;`</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/[^:\\w-,#;]+/g</span>)); <span class=\"comment\">// 贪婪模式下的排除匹配</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/\\p&#123;sc=Han&#125;+/gu</span>)); <span class=\"comment\">// [&quot;张三&quot;, &quot;李四&quot;]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原子表字符不解析\"><a href=\"#原子表字符不解析\" class=\"headerlink\" title=\"原子表字符不解析\"></a>原子表字符不解析</h2><ol>\n<li><code>[.+]</code> <code>[()]</code> 仅表示原来字符的意思</li>\n</ol>\n<h2 id=\"原子表匹配\"><a href=\"#原子表匹配\" class=\"headerlink\" title=\"原子表匹配\"></a>原子表匹配</h2><ol>\n<li><code>s</code>忽略换行符 <code>*</code>表示0个或者多个</li>\n<li><code>[\\d\\D] [\\s\\S]</code> 匹配所有字符</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>ddawd</span><br><span class=\"line\">        dawd</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>dwad</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>dasdwa</span><br><span class=\"line\">        adaw</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> body = <span class=\"built_in\">document</span>.body;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// let reg = /&lt;(\\w+)&gt;[^]+&lt;\\/\\1&gt;/gi // 注意贪婪模式</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;(h[1-6])&gt;[^]*&lt;\\/\\1&gt;/gi</span> <span class=\"comment\">// 注意贪婪模式 *表示0个或者多个</span></span></span><br><span class=\"line\"><span class=\"javascript\">    body.innerHTML = body.innerHTML.replace(reg,<span class=\"string\">&#x27;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原子组\"><a href=\"#原子组\" class=\"headerlink\" title=\"原子组\"></a>原子组</h2><ol>\n<li><code>()</code> 表示一个整体</li>\n<li>可进行别名的编号</li>\n<li>使用原子组实现标签的替换</li>\n<li>在原子组回调函数中,各个参数表示的是 第一个是满足条件的所有内容 其他参数 依次为定义的满足原子组条件的内容</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>ddawd</span><br><span class=\"line\">        dawd</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>dwad</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>dasdwa</span><br><span class=\"line\">        adaw</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 原子组替换</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> body = <span class=\"built_in\">document</span>.body</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    // body.innerHTML = body.innerHTML.replace(/&lt;(h[1-6]+)&gt;([^]*)&lt;\\/\\1&gt;/g,`<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span>`) // 直接表示</span></span></span><br><span class=\"line\"><span class=\"javascript\">    body.innerHTML= body.innerHTML.replace(<span class=\"regexp\">/&lt;(h[1-6]+)&gt;([^]*)&lt;\\/\\1&gt;/g</span>,<span class=\"function\">(<span class=\"params\">f0,f1,f2</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(f0);  // 输入满足条件的所有</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(f1); // 输出第一个原子组匹配的内容</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(f2);// 输出第二个原子组匹配的内容</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> <span class=\"string\">`&lt;p&gt;<span class=\"subst\">$&#123;f2&#125;</span>&lt;/p&gt;`</span></span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;) <span class=\"comment\">// 函数表示</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"不记录分组\"><a href=\"#不记录分组\" class=\"headerlink\" title=\"不记录分组\"></a>不记录分组</h2><ol>\n<li>使用不记录分组,就是使用原子组后 无法再去使用函数参数去调用</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">let</span> url = <span class=\"string\">`https://u.mr90.top</span></span><br><span class=\"line\"><span class=\"string\">    http://github.com</span></span><br><span class=\"line\"><span class=\"string\">    httpS://mr90.top`</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用不记录分组,就是使用原子组后 无法再去使用函数参数去调用</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/https?:\\/\\/((?:\\w+\\.)?\\w+\\.(?:com|top))/gi</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(reg.test(url)); <span class=\"comment\">//true // 有满足条件的内容</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(url.match(reg)); <span class=\"comment\">// [&quot;https://u.mr90.top&quot;, &quot;http://github.com&quot;, &quot;httpS://mr90.top&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">//    console.log(reg.exec(url)); // 返回满足条件的第一个内容</span></span><br><span class=\"line\"><span class=\"comment\">//    console.log(reg.lastIndex); // 记录下次开始时的索引位置</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> urlA = [];</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(res=reg.exec(url)) urlA.push(res[<span class=\"number\">1</span>])</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(urlA);</span><br></pre></td></tr></table></figure>\n<h2 id=\"重复匹配\"><a href=\"#重复匹配\" class=\"headerlink\" title=\"重复匹配\"></a>重复匹配</h2><ol>\n<li><code>+</code>  一个或者多个 <code>&#123;1,&#125;</code> 类似与加号</li>\n<li><code>*</code> 0个或者多个 <code>&#123;0,&#125;</code> 类似与*号</li>\n<li><code>?</code> 0个或者1个</li>\n</ol>\n<h2 id=\"批量使用正则完成密码的验证\"><a href=\"#批量使用正则完成密码的验证\" class=\"headerlink\" title=\"批量使用正则完成密码的验证\"></a>批量使用正则完成密码的验证</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对表单输入的值进行验证</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;[name=pwd&#x27;</span>)</span><br><span class=\"line\">    .addEventListener(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log();</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> value = e.target.value</span><br><span class=\"line\">        <span class=\"keyword\">let</span> reg = [</span><br><span class=\"line\">            /^[a-z0-<span class=\"number\">9</span>]&#123;<span class=\"number\">5</span>,<span class=\"number\">7</span>&#125;$/i,</span><br><span class=\"line\">            /[A-Z]/, <span class=\"regexp\">/[\\d]/</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> state = reg.every(<span class=\"function\"><span class=\"params\">v</span>=&gt;</span>v.test(value))</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(state?<span class=\"string\">&#x27;正确&#x27;</span>:<span class=\"string\">&#x27;错误&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"禁止贪婪\"><a href=\"#禁止贪婪\" class=\"headerlink\" title=\"禁止贪婪\"></a>禁止贪婪</h2><ol>\n<li><code>&#123;2,&#125;?</code> 限制贪婪</li>\n<li><code>*?</code> 禁止贪婪</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top2<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top3<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span></span><br><span class=\"line\"><span class=\"javascript\">    main.innerHTML = main.innerHTML.replace(reg,<span class=\"function\">(<span class=\"params\">p0,p1</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(p0);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> <span class=\"string\">`&lt;h2 style=&quot;color:red&quot;&gt;<span class=\"subst\">$&#123;p1&#125;</span>&lt;/h2&gt;`</span></span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"matchAll-全局匹配\"><a href=\"#matchAll-全局匹配\" class=\"headerlink\" title=\"matchAll 全局匹配\"></a>matchAll 全局匹配</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top2<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top3<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 不使用matchAll方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> content = [];</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// main.innerHTML = main.innerHTML.replace(reg,(p0,p1)=&gt;&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//     content.push(p1)</span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    //     return `<span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:red&quot;</span>&gt;</span>$&#123;p1&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// console.table(content)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 使用matchAll方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> hd = main.innerHTML.matchAll(reg)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// console.log(main.innerHTML.matchAll()); // 遍历迭代</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> i <span class=\"keyword\">of</span> hd) &#123;</span></span><br><span class=\"line\">        content.push(i[1])</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(i);</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.table(content);</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"exec-全局匹配\"><a href=\"#exec-全局匹配\" class=\"headerlink\" title=\"exec 全局匹配\"></a>exec 全局匹配</h2><ol>\n<li>匹配时 <code>g</code>不能缺少</li>\n<li><code>search</code> 返回匹配的索引值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// exec方法 匹配全局</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">string, reg</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> content = [];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (res = reg.exec(string)) &#123;</span><br><span class=\"line\">        content.push(res)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">return</span> content</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fn(main.innerHTML, reg));</span><br><span class=\"line\"><span class=\"comment\">// exec方法 匹配全局</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> content = [];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">string, reg</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (res = reg.exec(string)) content.push(res)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn(main.innerHTML, reg)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"符\"><a href=\"#符\" class=\"headerlink\" title=\"$符\"></a>$符</h2><ol>\n<li><code>$`</code> 匹配开头的第一个字符 </li>\n<li><code>$&#39;</code> 匹配结尾字符</li>\n<li><code>$&amp;</code> 匹配自身</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// let tel = &#x27;2020/12/23&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(tel.replace(/\\//g,&#x27;-&#x27;)); // 2020-12-23</span></span><br><span class=\"line\"><span class=\"comment\">// let tel = &#x27;(021)9999999 (023)4444444&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(tel.replace(/[(]+(\\d&#123;3&#125;)[)](\\d&#123;7&#125;)/g,&#x27;$1-$2&#x27;)); //021-9999999 023-4444444</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">&#x27;%Harry=&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&#x27;$`&#x27;</span>)); <span class=\"comment\">// $` 匹配开头的第一个字符 %%=</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&quot;$&#x27;&quot;</span>)); <span class=\"comment\">// $&#x27; 匹配结尾字符 %==</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&quot;$&amp;&quot;</span>)); <span class=\"comment\">// $&amp; 匹配自身</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&quot;$`$`$&amp;$&#x27;$&#x27;&quot;</span>)); <span class=\"comment\">// $&amp; 匹配自身</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原子组的别名\"><a href=\"#原子组的别名\" class=\"headerlink\" title=\"原子组的别名\"></a>原子组的别名</h2><ol>\n<li>格式 <code>?&lt;别名&gt;</code> </li>\n<li>调用 <code>&lt;别名&gt;</code></li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://u.mr90.top&quot;</span>&gt;</span>博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&#x27;https://baidu.com&#x27;</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://github.com&quot;</span>&gt;</span>Github<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;a.*?href=([&#x27;&quot;])(?&lt;link&gt;.*?)\\1&gt;(?&lt;title&gt;.*?)&lt;\\/a&gt;/gi</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 进行迭代遍历</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> i <span class=\"keyword\">of</span> main.innerHTML.matchAll(reg)) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(i);</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.table(i.groups)</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"断言匹配\"><a href=\"#断言匹配\" class=\"headerlink\" title=\"断言匹配 ?=\"></a>断言匹配 ?=</h2><ol>\n<li><code>(?=)</code> 表示在之前条件的后面满足该断言匹配的内容</li>\n<li><code>(?&lt;=)</code> 表示前面是条件的匹配内容</li>\n<li><code>(?!)</code> 表示后面不是某个条件的内容</li>\n<li><code>(?&lt;!)</code> 表示前面不是某个条件的内容</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://u.mr90.top&quot;</span>&gt;</span>博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&#x27;https://baidu.com&#x27;</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://github.com&quot;</span>&gt;</span>Github<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(?&lt;=href=([&#x27;&quot;]))(.*?)(?=\\1&gt;)/gi</span></span></span><br><span class=\"line\"><span class=\"javascript\">    main.innerHTML = main.innerHTML.replace(reg,<span class=\"string\">&#x27;https://mr90.top&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"手机号码断言隐藏\"><a href=\"#手机号码断言隐藏\" class=\"headerlink\" title=\"手机号码断言隐藏\"></a>手机号码断言隐藏</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> users = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">李四：12323212232</span></span><br><span class=\"line\"><span class=\"string\">张三：12322131122</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(?&lt;=\\d&#123;7&#125;)\\d&#123;4&#125;/gi</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(users.replace(reg,<span class=\"string\">&#x27;*&#x27;</span>.repeat(<span class=\"number\">4</span>)));</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"正则字符串提取数字\"><a href=\"#正则字符串提取数字\" class=\"headerlink\" title=\"正则字符串提取数字\"></a>正则字符串提取数字</h2><ol>\n<li>使用\\d将数字匹配出来 /g全局匹配</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;daw21321dasda23123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 不使用正则表达式写一个方法</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(Number.isNaN(parseInt(&#x27;1&#x27;)));</span></span><br><span class=\"line\"><span class=\"comment\">// ...将字符串转换成数组形式 Array.from()方法也可以 使用isNaN判断是否为非数字</span></span><br><span class=\"line\"><span class=\"comment\">// let news = [...hd].filter(v=&gt;!Number.isNaN(parseInt(v)));</span></span><br><span class=\"line\"><span class=\"comment\">// 使用join方法连接</span></span><br><span class=\"line\"><span class=\"comment\">// 使用正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> news = hd.match(<span class=\"regexp\">/\\d/g</span>).join(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(news);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"正则字变量\"><a href=\"#正则字变量\" class=\"headerlink\" title=\"正则字变量\"></a>正则字变量</h2><ol>\n<li>使用eval()方法</li>\n<li>使用test()方法返回的是布尔值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;daw21321dasda23123123&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> news = <span class=\"built_in\">eval</span>(<span class=\"string\">`/<span class=\"subst\">$&#123;a&#125;</span>/`</span>).test(hd)  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(news);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用对象创建\"><a href=\"#使用对象创建\" class=\"headerlink\" title=\"使用对象创建\"></a>使用对象创建</h2><ol>\n<li>替换字符串中匹配到的字符</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span>mr90.top<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">let</span> div = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;.content&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">let</span> a = prompt(<span class=\"string\">&#x27;输入字符&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">let</span> regs = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(a,<span class=\"string\">&quot;g&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">div.innerHTML = div.innerHTML.replace(regs,<span class=\"function\"><span class=\"params\">search</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> <span class=\"string\">`&lt;span style=&quot;color:red&quot;&gt;<span class=\"subst\">$&#123;search&#125;</span>&lt;/span&gt;`</span></span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"选择符\"><a href=\"#选择符\" class=\"headerlink\" title=\"选择符 |\"></a>选择符 |</h2><ol>\n<li>匹配左右两侧的条件</li>\n<li>原子组()  原子表[]</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">&#x27;023-2312322&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"regexp\">/(023|020)\\-\\d&#123;7,8&#125;/</span>.test(tel)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 重复的条件使用原子组的方法&#123;7，8&#125;表示 7-8位的数字 \\- 表示转义</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(12|34)/</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;31w231&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(reg)); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"转义\"><a href=\"#转义\" class=\"headerlink\" title=\"转义\"></a>转义</h2><ol>\n<li>在字面量里面 使用<code>\\d \\.</code> 将字符可实现转义</li>\n<li>在构造函数中<code>\\d \\.</code> 表示的是该字符 所以 必须再加一个转义符 <code>\\\\d \\\\.</code></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> price = <span class=\"string\">&#x27;12@21&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// . 除换行外的任何字符</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"regexp\">/\\d+.\\d/</span>.test(price)); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">&#x27;\\\\d+\\\\.\\\\d+&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// \\\\ 双转义</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(price)); <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 网址</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">&#x27;https://u.mr90.top&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"regexp\">/https?:\\/\\/\\w+\\.\\w+\\.\\w+/</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(url)); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"regexp\">/https?:\\/\\/\\w+\\.\\w+/</span>.test(url)); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字符边界符\"><a href=\"#字符边界符\" class=\"headerlink\" title=\"字符边界符\"></a>字符边界符</h2><ol>\n<li>边界符表示开始和结尾必须满足条件 <code>/^[a-z]$/</code></li>\n<li><code>&#123;3,6&#125;</code> 加入边界字符 才能控制其数量范围</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;[name=&#x27;user&#x27;]&quot;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    .addEventListener(<span class=\"string\">&#x27;keyup&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> flag = <span class=\"built_in\">this</span>.value.match(<span class=\"regexp\">/^[a-z]&#123;3,6&#125;$/</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(flag);</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数值与空白元字符\"><a href=\"#数值与空白元字符\" class=\"headerlink\" title=\"数值与空白元字符\"></a>数值与空白元字符</h2><ol>\n<li><code>\\d</code> 匹配数字 <code>\\D</code> 匹配非数字</li>\n<li>在原子表中首页<code>^</code>表示非的意思<code>/[^]/</code></li>\n<li><code>\\s</code> 表示匹配空白和换行 <code>\\S</code> 非空白</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;张三:021-9999299,李四:022-2122122&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 匹配所有的数字号码</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/\\d&#123;3&#125;\\-\\d&#123;7,8&#125;/g</span>)); <span class=\"comment\">//[&quot;021-9999299&quot;, &quot;022-2122122&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">// 匹配姓名 + 表示匹配相邻的符合条件的</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/[^:\\d,-\\s]+/g</span>)); <span class=\"comment\">// [&quot;张三&quot;, &quot;李四&quot;]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"w和W元字符\"><a href=\"#w和W元字符\" class=\"headerlink\" title=\"w和W元字符\"></a>w和W元字符</h2><ol>\n<li><code>\\w</code> 匹配字母和数字 下划线</li>\n<li><code>\\W</code>与之相反</li>\n</ol>\n<h2 id=\"点字符的使用\"><a href=\"#点字符的使用\" class=\"headerlink\" title=\"点字符的使用\"></a>点字符的使用</h2><ol>\n<li>匹配所有字符默认模式下，它匹配除了换行符以外的任意字符。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">`wad\\nawd\\n`</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/.+/g</span>)); <span class=\"comment\">// [wad,awd]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"匹配所有字符\"><a href=\"#匹配所有字符\" class=\"headerlink\" title=\"匹配所有字符\"></a>匹配所有字符</h2><ol>\n<li>在原子组中<code>[\\s\\S]</code> 或者<code>[\\d\\D]</code></li>\n<li>匹配标签使用 <code>/&lt;span&gt;[\\s\\S]+&lt;/span&gt;/</code></li>\n</ol>\n<h2 id=\"i和g-模式修正\"><a href=\"#i和g-模式修正\" class=\"headerlink\" title=\"i和g 模式修正\"></a>i和g 模式修正</h2><ol>\n<li><code>g</code>全局匹配 <code>i</code>不区分大小写</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">#1 js,200元 #</span></span><br><span class=\"line\"><span class=\"string\">#2 php,300元 #</span></span><br><span class=\"line\"><span class=\"string\">#9 mr90.top # 你好</span></span><br><span class=\"line\"><span class=\"string\">#3 node.js,180元 #</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> lessons = hd.match(<span class=\"regexp\">/^\\s*#\\d+\\s+.+\\s+#$/gm</span>).map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">    v = v.replace(<span class=\"regexp\">/\\s*#\\d+\\s*/</span>, <span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"regexp\">/\\s+#/</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [name, price] = v.split(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; name, price &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(lessons);</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">0: &#123;name: &quot;js&quot;, price: &quot;200元&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">1: &#123;name: &quot;php&quot;, price: &quot;300元&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">2: &#123;name: &quot;node.js&quot;, price: &quot;180元&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">length: 3*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"汉字与字符属性\"><a href=\"#汉字与字符属性\" class=\"headerlink\" title=\"汉字与字符属性\"></a>汉字与字符属性</h2><ol>\n<li><code>\\p</code>表示匹配字符</li>\n<li><code>\\P</code> 相反</li>\n</ol>\n<h2 id=\"lastIndex\"><a href=\"#lastIndex\" class=\"headerlink\" title=\"lastIndex\"></a>lastIndex</h2><ol>\n<li>lastIndex 属性用于规定下次匹配的起始位置</li>\n<li><code>exec()</code> 方法用于检索字符串中的正则表达式的匹配。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">&#x27;dawdaw31&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/\\w/g</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.exec(hd));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.lastIndex); <span class=\"comment\">// lastIndex 属性用于规定下次匹配的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">// 将匹配到的值赋值给res 有值打印数据 否则返回null 不满足循环条件 循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(res=reg.exec(hd))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"y模式\"><a href=\"#y模式\" class=\"headerlink\" title=\"y模式\"></a>y模式</h2><ol>\n<li>后一次匹配都是从上一次匹配成功的下一个位置开始</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hd =<span class=\"string\">`你好世界大王大大:11111111,1111231,213123212,</span></span><br><span class=\"line\"><span class=\"string\">达瓦达,网站:u.mr90.top`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(\\d+),?/y</span></span><br><span class=\"line\">reg.lastIndex = <span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> qq = []</span><br><span class=\"line\"><span class=\"comment\">// console.log(reg.exec(hd)); </span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(res=reg.exec(hd)) qq.push(res[<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(qq);</span><br></pre></td></tr></table></figure>\n<h2 id=\"原子表\"><a href=\"#原子表\" class=\"headerlink\" title=\"原子表\"></a>原子表</h2><ol>\n<li><code>[]</code> 匹配中括号内的所有条件</li>\n<li>原子组和原子表搭配使用</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> times = <span class=\"string\">&#x27;2020-02/21&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(times.match(<span class=\"regexp\">/^\\d&#123;4&#125;[-\\/]\\d&#123;2&#125;[-\\/]\\d&#123;2&#125;$/</span>)); <span class=\"comment\">// 2020/02-21</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(times.match(<span class=\"regexp\">/^\\d&#123;4&#125;([-\\/])\\d&#123;2&#125;\\1\\d&#123;2&#125;$/</span>)); <span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(times.match(<span class=\"regexp\">/^\\d&#123;4&#125;([-\\/])\\d&#123;2&#125;\\1\\d&#123;2&#125;$/</span>)); <span class=\"comment\">// 2020/02/21</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"区间匹配\"><a href=\"#区间匹配\" class=\"headerlink\" title=\"区间匹配\"></a>区间匹配</h2><ol>\n<li>数字区间<code>[0-9]+</code> 加号表示贪婪模式</li>\n<li>字母区间<code>[a-z]</code></li>\n</ol>\n<h2 id=\"排除匹配\"><a href=\"#排除匹配\" class=\"headerlink\" title=\"排除匹配\"></a>排除匹配</h2><ol>\n<li><code>[^]</code> 表示排除匹配</li>\n<li><code>\\p</code>表示匹配满足<code>&#123;&#125;</code>内的字符</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// let hd = &#x27;u.mr90.top&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(hd.match(/[^u]/gi)); //[&quot;.&quot;, &quot;m&quot;, &quot;r&quot;, &quot;9&quot;, &quot;0&quot;, &quot;.&quot;, &quot;t&quot;, &quot;o&quot;, &quot;p&quot;]</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> hd = <span class=\"string\">`张三:231-23123123,李四#:123-312313;`</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/[^:\\w-,#;]+/g</span>)); <span class=\"comment\">// 贪婪模式下的排除匹配</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hd.match(<span class=\"regexp\">/\\p&#123;sc=Han&#125;+/gu</span>)); <span class=\"comment\">// [&quot;张三&quot;, &quot;李四&quot;]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原子表字符不解析\"><a href=\"#原子表字符不解析\" class=\"headerlink\" title=\"原子表字符不解析\"></a>原子表字符不解析</h2><ol>\n<li><code>[.+]</code> <code>[()]</code> 仅表示原来字符的意思</li>\n</ol>\n<h2 id=\"原子表匹配\"><a href=\"#原子表匹配\" class=\"headerlink\" title=\"原子表匹配\"></a>原子表匹配</h2><ol>\n<li><code>s</code>忽略换行符 <code>*</code>表示0个或者多个</li>\n<li><code>[\\d\\D] [\\s\\S]</code> 匹配所有字符</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>ddawd</span><br><span class=\"line\">        dawd</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>dwad</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>dasdwa</span><br><span class=\"line\">        adaw</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> body = <span class=\"built_in\">document</span>.body;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// let reg = /&lt;(\\w+)&gt;[^]+&lt;\\/\\1&gt;/gi // 注意贪婪模式</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;(h[1-6])&gt;[^]*&lt;\\/\\1&gt;/gi</span> <span class=\"comment\">// 注意贪婪模式 *表示0个或者多个</span></span></span><br><span class=\"line\"><span class=\"javascript\">    body.innerHTML = body.innerHTML.replace(reg,<span class=\"string\">&#x27;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原子组\"><a href=\"#原子组\" class=\"headerlink\" title=\"原子组\"></a>原子组</h2><ol>\n<li><code>()</code> 表示一个整体</li>\n<li>可进行别名的编号</li>\n<li>使用原子组实现标签的替换</li>\n<li>在原子组回调函数中,各个参数表示的是 第一个是满足条件的所有内容 其他参数 依次为定义的满足原子组条件的内容</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>ddawd</span><br><span class=\"line\">        dawd</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>dwad</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>dasdwa</span><br><span class=\"line\">        adaw</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 原子组替换</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> body = <span class=\"built_in\">document</span>.body</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    // body.innerHTML = body.innerHTML.replace(/&lt;(h[1-6]+)&gt;([^]*)&lt;\\/\\1&gt;/g,`<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>$2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span>`) // 直接表示</span></span></span><br><span class=\"line\"><span class=\"javascript\">    body.innerHTML= body.innerHTML.replace(<span class=\"regexp\">/&lt;(h[1-6]+)&gt;([^]*)&lt;\\/\\1&gt;/g</span>,<span class=\"function\">(<span class=\"params\">f0,f1,f2</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(f0);  // 输入满足条件的所有</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(f1); // 输出第一个原子组匹配的内容</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(f2);// 输出第二个原子组匹配的内容</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> <span class=\"string\">`&lt;p&gt;<span class=\"subst\">$&#123;f2&#125;</span>&lt;/p&gt;`</span></span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;) <span class=\"comment\">// 函数表示</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"不记录分组\"><a href=\"#不记录分组\" class=\"headerlink\" title=\"不记录分组\"></a>不记录分组</h2><ol>\n<li>使用不记录分组,就是使用原子组后 无法再去使用函数参数去调用</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">let</span> url = <span class=\"string\">`https://u.mr90.top</span></span><br><span class=\"line\"><span class=\"string\">    http://github.com</span></span><br><span class=\"line\"><span class=\"string\">    httpS://mr90.top`</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用不记录分组,就是使用原子组后 无法再去使用函数参数去调用</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/https?:\\/\\/((?:\\w+\\.)?\\w+\\.(?:com|top))/gi</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(reg.test(url)); <span class=\"comment\">//true // 有满足条件的内容</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(url.match(reg)); <span class=\"comment\">// [&quot;https://u.mr90.top&quot;, &quot;http://github.com&quot;, &quot;httpS://mr90.top&quot;]</span></span><br><span class=\"line\"><span class=\"comment\">//    console.log(reg.exec(url)); // 返回满足条件的第一个内容</span></span><br><span class=\"line\"><span class=\"comment\">//    console.log(reg.lastIndex); // 记录下次开始时的索引位置</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> urlA = [];</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(res=reg.exec(url)) urlA.push(res[<span class=\"number\">1</span>])</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(urlA);</span><br></pre></td></tr></table></figure>\n<h2 id=\"重复匹配\"><a href=\"#重复匹配\" class=\"headerlink\" title=\"重复匹配\"></a>重复匹配</h2><ol>\n<li><code>+</code>  一个或者多个 <code>&#123;1,&#125;</code> 类似与加号</li>\n<li><code>*</code> 0个或者多个 <code>&#123;0,&#125;</code> 类似与*号</li>\n<li><code>?</code> 0个或者1个</li>\n</ol>\n<h2 id=\"批量使用正则完成密码的验证\"><a href=\"#批量使用正则完成密码的验证\" class=\"headerlink\" title=\"批量使用正则完成密码的验证\"></a>批量使用正则完成密码的验证</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对表单输入的值进行验证</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;[name=pwd&#x27;</span>)</span><br><span class=\"line\">    .addEventListener(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log();</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> value = e.target.value</span><br><span class=\"line\">        <span class=\"keyword\">let</span> reg = [</span><br><span class=\"line\">            /^[a-z0-<span class=\"number\">9</span>]&#123;<span class=\"number\">5</span>,<span class=\"number\">7</span>&#125;$/i,</span><br><span class=\"line\">            /[A-Z]/, <span class=\"regexp\">/[\\d]/</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> state = reg.every(<span class=\"function\"><span class=\"params\">v</span>=&gt;</span>v.test(value))</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(state?<span class=\"string\">&#x27;正确&#x27;</span>:<span class=\"string\">&#x27;错误&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"禁止贪婪\"><a href=\"#禁止贪婪\" class=\"headerlink\" title=\"禁止贪婪\"></a>禁止贪婪</h2><ol>\n<li><code>&#123;2,&#125;?</code> 限制贪婪</li>\n<li><code>*?</code> 禁止贪婪</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top2<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top3<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span></span><br><span class=\"line\"><span class=\"javascript\">    main.innerHTML = main.innerHTML.replace(reg,<span class=\"function\">(<span class=\"params\">p0,p1</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(p0);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> <span class=\"string\">`&lt;h2 style=&quot;color:red&quot;&gt;<span class=\"subst\">$&#123;p1&#125;</span>&lt;/h2&gt;`</span></span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"matchAll-全局匹配\"><a href=\"#matchAll-全局匹配\" class=\"headerlink\" title=\"matchAll 全局匹配\"></a>matchAll 全局匹配</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top2<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>u.mr90.top3<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 不使用matchAll方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> content = [];</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// main.innerHTML = main.innerHTML.replace(reg,(p0,p1)=&gt;&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//     content.push(p1)</span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    //     return `<span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:red&quot;</span>&gt;</span>$&#123;p1&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// console.table(content)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 使用matchAll方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> hd = main.innerHTML.matchAll(reg)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// console.log(main.innerHTML.matchAll()); // 遍历迭代</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> i <span class=\"keyword\">of</span> hd) &#123;</span></span><br><span class=\"line\">        content.push(i[1])</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(i);</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.table(content);</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"exec-全局匹配\"><a href=\"#exec-全局匹配\" class=\"headerlink\" title=\"exec 全局匹配\"></a>exec 全局匹配</h2><ol>\n<li>匹配时 <code>g</code>不能缺少</li>\n<li><code>search</code> 返回匹配的索引值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// exec方法 匹配全局</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">string, reg</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> content = [];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (res = reg.exec(string)) &#123;</span><br><span class=\"line\">        content.push(res)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">return</span> content</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fn(main.innerHTML, reg));</span><br><span class=\"line\"><span class=\"comment\">// exec方法 匹配全局</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;span&gt;([^]+?)&lt;\\/span&gt;/g</span> <span class=\"comment\">// ?加上问号 并且写到原子组中为了将贪婪的范围缩小到每一行上</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> content = [];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">string, reg</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (res = reg.exec(string)) content.push(res)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn(main.innerHTML, reg)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(content);</span><br></pre></td></tr></table></figure>\n<h2 id=\"符\"><a href=\"#符\" class=\"headerlink\" title=\"$符\"></a>$符</h2><ol>\n<li><code>$`</code> 匹配开头的第一个字符 </li>\n<li><code>$&#39;</code> 匹配结尾字符</li>\n<li><code>$&amp;</code> 匹配自身</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// let tel = &#x27;2020/12/23&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(tel.replace(/\\//g,&#x27;-&#x27;)); // 2020-12-23</span></span><br><span class=\"line\"><span class=\"comment\">// let tel = &#x27;(021)9999999 (023)4444444&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(tel.replace(/[(]+(\\d&#123;3&#125;)[)](\\d&#123;7&#125;)/g,&#x27;$1-$2&#x27;)); //021-9999999 023-4444444</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tel = <span class=\"string\">&#x27;%Harry=&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&#x27;$`&#x27;</span>)); <span class=\"comment\">// $` 匹配开头的第一个字符 %%=</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&quot;$&#x27;&quot;</span>)); <span class=\"comment\">// $&#x27; 匹配结尾字符 %==</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&quot;$&amp;&quot;</span>)); <span class=\"comment\">// $&amp; 匹配自身</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tel.replace(<span class=\"regexp\">/\\w+/g</span>,<span class=\"string\">&quot;$`$`$&amp;$&#x27;$&#x27;&quot;</span>)); <span class=\"comment\">// $&amp; 匹配自身</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原子组的别名\"><a href=\"#原子组的别名\" class=\"headerlink\" title=\"原子组的别名\"></a>原子组的别名</h2><ol>\n<li>格式 <code>?&lt;别名&gt;</code> </li>\n<li>调用 <code>&lt;别名&gt;</code></li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://u.mr90.top&quot;</span>&gt;</span>博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&#x27;https://baidu.com&#x27;</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://github.com&quot;</span>&gt;</span>Github<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;a.*?href=([&#x27;&quot;])(?&lt;link&gt;.*?)\\1&gt;(?&lt;title&gt;.*?)&lt;\\/a&gt;/gi</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 进行迭代遍历</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> i <span class=\"keyword\">of</span> main.innerHTML.matchAll(reg)) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// console.log(i);</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.table(i.groups)</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"断言匹配\"><a href=\"#断言匹配\" class=\"headerlink\" title=\"断言匹配 ?=\"></a>断言匹配 ?=</h2><ol>\n<li><code>(?=)</code> 表示在之前条件的后面满足该断言匹配的内容</li>\n<li><code>(?&lt;=)</code> 表示前面是条件的匹配内容</li>\n<li><code>(?!)</code> 表示后面不是某个条件的内容</li>\n<li><code>(?&lt;!)</code> 表示前面不是某个条件的内容</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://u.mr90.top&quot;</span>&gt;</span>博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&#x27;https://baidu.com&#x27;</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://github.com&quot;</span>&gt;</span>Github<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> main = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;main&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(?&lt;=href=([&#x27;&quot;]))(.*?)(?=\\1&gt;)/gi</span></span></span><br><span class=\"line\"><span class=\"javascript\">    main.innerHTML = main.innerHTML.replace(reg,<span class=\"string\">&#x27;https://mr90.top&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"手机号码断言隐藏\"><a href=\"#手机号码断言隐藏\" class=\"headerlink\" title=\"手机号码断言隐藏\"></a>手机号码断言隐藏</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> users = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">李四：12323212232</span></span><br><span class=\"line\"><span class=\"string\">张三：12322131122</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/(?&lt;=\\d&#123;7&#125;)\\d&#123;4&#125;/gi</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(users.replace(reg,<span class=\"string\">&#x27;*&#x27;</span>.repeat(<span class=\"number\">4</span>)));</span><br></pre></td></tr></table></figure>","categories":[{"name":"web","path":"api/categories/web.json"},{"name":"Javascript","path":"api/categories/Javascript.json"}],"tags":[]}