{"title":"webpack-前端工程化","slug":"webpack","date":"2021-08-05T01:03:14.000Z","updated":"2021-09-30T01:10:29.011Z","comments":true,"path":"api/articles/webpack.json","excerpt":null,"covers":null,"content":"<h2 id=\"实际前端开发\"><a href=\"#实际前端开发\" class=\"headerlink\" title=\"实际前端开发\"></a>实际前端开发</h2><ol>\n<li>模块化(js)</li>\n<li>组件化(ui)</li>\n<li>规范化</li>\n<li>自动化(构建,部署,自动化测试)</li>\n</ol>\n<h2 id=\"初识webpack\"><a href=\"#初识webpack\" class=\"headerlink\" title=\"初识webpack\"></a>初识webpack</h2><ul>\n<li>功能: 代码压缩混淆, 处理浏览器JavaScript的兼容性, 性能优化</li>\n<li>定义: 解决前端工程化的具体解决方案</li>\n</ul>\n<h2 id=\"初始化配置\"><a href=\"#初始化配置\" class=\"headerlink\" title=\"初始化配置\"></a>初始化配置</h2><ul>\n<li><code>npm install init -y</code> 初始化<code>package.json</code></li>\n<li><code>-S</code> –save, 将下载的包名和版本号 装到<code>dependencies</code>下(开发和部署)</li>\n<li><code>-D</code> –save-dev, 将包记录到<code>devDependencies</code>(只在开发过程中)</li>\n<li>安装webpack <code>npm i webpack@5.42.1 webpack-cli@4.7.2 -D</code></li>\n<li>在根目录下配置<code>webpack.config.js</code> 配置当前的环境mode 有两种选择 development和production</li>\n<li>运行webpack 在package.json 下的scripts中配置webpack命令</li>\n<li>要想实现webpack压缩功能将webpack.config.js模式修改为<code>production</code></li>\n</ul>\n<h3 id=\"entry指定打包入口\"><a href=\"#entry指定打包入口\" class=\"headerlink\" title=\"entry指定打包入口\"></a>entry指定打包入口</h3><ul>\n<li>表示要处理的那个文件</li>\n<li>使用path模块<code>path.join(__dirname, &#39;&#39;)</code></li>\n</ul>\n<h3 id=\"output指定打包出口\"><a href=\"#output指定打包出口\" class=\"headerlink\" title=\"output指定打包出口\"></a>output指定打包出口</h3><ul>\n<li>数据类型对象 <code>path</code> 指定存放的目录 <code>filename</code> 生成的文件名</li>\n</ul>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><ul>\n<li>安装<code>webpack-dev-server@3.11.2 -D</code> 实现实时自动打包</li>\n<li>将打包的文件生成到内存中, 不是物理磁盘中</li>\n<li>使用时将srcipt中的地址改为根目录<code>/</code>使用地址<code>http://localhost:8080</code>访问</li>\n</ul>\n<h3 id=\"安装html-webpack-plugin\"><a href=\"#安装html-webpack-plugin\" class=\"headerlink\" title=\"安装html-webpack-plugin\"></a>安装html-webpack-plugin</h3><ul>\n<li><code>npm i html-webpack-plugin@5.3.2 -D</code></li>\n<li>把指定的页面加入复制到根目录, 内存中</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 导入html-webpack-plugin </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 创建插件的实例对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> html = <span class=\"keyword\">new</span> HtmlPlugin(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制的页面</span></span><br><span class=\"line\">  template: <span class=\"string\">&#x27;./src/index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制出来的文件名和存档路径</span></span><br><span class=\"line\">  filename: <span class=\"string\">&#x27;./index.html&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">&#x27;development&#x27;</span>, <span class=\"comment\">//productions,</span></span><br><span class=\"line\">  entry: path.join(__dirname, <span class=\"string\">&#x27;./src/index.js&#x27;</span>),</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.join(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">&#x27;main.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [html]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"devSever-节点\"><a href=\"#devSever-节点\" class=\"headerlink\" title=\"devSever 节点\"></a>devSever 节点</h3><ul>\n<li>自动打开生成的网站, 展示网页效果</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  port: <span class=\"number\">9090</span>, <span class=\"comment\">//自定义端口号</span></span><br><span class=\"line\">  host: <span class=\"string\">&#x27;127.0.0.1&#x27;</span> <span class=\"comment\">// 指定打开地址</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"loader-加载器\"><a href=\"#loader-加载器\" class=\"headerlink\" title=\"loader 加载器\"></a>loader 加载器</h2><ul>\n<li>处理非<code>.js</code>文件</li>\n<li>打包处理css文件 <code>npm i style-loader@3.0.0 css-loader@5.2.6 -D</code></li>\n<li>当webpack发现某个文件处理不了的时候, 活查找webpack.confing.js这个配置文件中的module.rules数组中, 是否配置了对象的loader加载器</li>\n<li>打包处理less文件 <code>npm i less-loader@10.0.1 less@4.1.1 -D</code></li>\n<li>打包图片的路径 <code>npm i url-loader@4.1.1 file-loader@6.2.0 -D</code>  可传递参数 limit 加上参数<code>&lt;=limit</code>大小的图片 才会被转换成base64, 单位字节</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">  rules: [&#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">      use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">      use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>, <span class=\"string\">&#x27;less-loader&#x27;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.(png|jpg|gif|jpeg)$/</span>,</span><br><span class=\"line\">      use: <span class=\"string\">&#x27;url-loader&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用<code>babel-loader</code>对js进行打包处理, 处理webpack无法处理的js高级语法 <code>npm i babel-loader@8.2.2 @babel/core@7.14.6 @babel/plugin-proposal-decorators@7.14.5 -D</code> 在根目录下创建一个babel.config.js文件 将插件配置写入 <code>[[&quot;@babel/plugin-proposal-decorators&quot;, &#123; &quot;legacy&quot;: true &#125;], [&quot;@babel/plugin-proposal-class-properties&quot;]]</code></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    [<span class=\"string\">&quot;@babel/plugin-proposal-decorators&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;legacy&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置build命令\"><a href=\"#配置build命令\" class=\"headerlink\" title=\"配置build命令\"></a>配置build命令</h2><ul>\n<li>创建一个scripts 脚本 <code>webpack --mode production</code></li>\n<li>将文件统一放到某个文件下 js配置path 图片在url中以地址方式传递outputPath参数</li>\n<li>使用<code>clean-webpack-plugin</code>插件将原来的dist文件先清理在生成</li>\n</ul>\n<h2 id=\"Source-Map\"><a href=\"#Source-Map\" class=\"headerlink\" title=\"Source Map\"></a>Source Map</h2><ul>\n<li>存储着原来的位置信息</li>\n<li>定位源代码的位置, 在配置文件中加入<code>devtool:&#39;evel-source-map&#39;</code> 开发环境下</li>\n<li>在发布项目时, 能定位行号, 但是不暴露源代码 <code>nosources-source-map</code> 生产环境下</li>\n<li>可以定位和显示源代码 使用<code>source-map</code></li>\n<li>@表示src源代码目录</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">  alias: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;@&quot;</span>: path.join(__dirname, <span class=\"string\">&#x27;./src/&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-config-js最终配置\"><a href=\"#webpack-config-js最终配置\" class=\"headerlink\" title=\"webpack.config.js最终配置\"></a>webpack.config.js最终配置</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 导入html-webpack-plugin </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 创建插件的实例对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> html = <span class=\"keyword\">new</span> HtmlPlugin(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制的页面</span></span><br><span class=\"line\">  template: <span class=\"string\">&#x27;./src/index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制出来的文件名和存档路径</span></span><br><span class=\"line\">  filename: <span class=\"string\">&#x27;./index.html&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">  CleanWebpackPlugin</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  devtool: <span class=\"string\">&#x27;nosources-source-map&#x27;</span>, <span class=\"comment\">// eval-source-map</span></span><br><span class=\"line\">  mode: <span class=\"string\">&#x27;development&#x27;</span>, <span class=\"comment\">//productions,</span></span><br><span class=\"line\">  entry: path.join(__dirname, <span class=\"string\">&#x27;./src/index.js&#x27;</span>),</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.join(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">&#x27;js/main.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [html, <span class=\"keyword\">new</span> CleanWebpackPlugin()],</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    port: <span class=\"number\">9090</span>, <span class=\"comment\">//自定义端口号</span></span><br><span class=\"line\">    host: <span class=\"string\">&#x27;127.0.0.1&#x27;</span> <span class=\"comment\">// 指定打开地址</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [&#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>, <span class=\"string\">&#x27;less-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(png|jpg|gif|jpeg)$/</span>,</span><br><span class=\"line\">        use: <span class=\"string\">&#x27;url-loader?limit=447&amp;outputPath=images&#x27;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 处理高级的js语法</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">        exclude: <span class=\"string\">&#x27;/node_modules/&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;@&quot;</span>: path.join(__dirname, <span class=\"string\">&#x27;./src/&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"实际前端开发\"><a href=\"#实际前端开发\" class=\"headerlink\" title=\"实际前端开发\"></a>实际前端开发</h2><ol>\n<li>模块化(js)</li>\n<li>组件化(ui)</li>\n<li>规范化</li>\n<li>自动化(构建,部署,自动化测试)</li>\n</ol>\n<h2 id=\"初识webpack\"><a href=\"#初识webpack\" class=\"headerlink\" title=\"初识webpack\"></a>初识webpack</h2><ul>\n<li>功能: 代码压缩混淆, 处理浏览器JavaScript的兼容性, 性能优化</li>\n<li>定义: 解决前端工程化的具体解决方案</li>\n</ul>\n<h2 id=\"初始化配置\"><a href=\"#初始化配置\" class=\"headerlink\" title=\"初始化配置\"></a>初始化配置</h2><ul>\n<li><code>npm install init -y</code> 初始化<code>package.json</code></li>\n<li><code>-S</code> –save, 将下载的包名和版本号 装到<code>dependencies</code>下(开发和部署)</li>\n<li><code>-D</code> –save-dev, 将包记录到<code>devDependencies</code>(只在开发过程中)</li>\n<li>安装webpack <code>npm i webpack@5.42.1 webpack-cli@4.7.2 -D</code></li>\n<li>在根目录下配置<code>webpack.config.js</code> 配置当前的环境mode 有两种选择 development和production</li>\n<li>运行webpack 在package.json 下的scripts中配置webpack命令</li>\n<li>要想实现webpack压缩功能将webpack.config.js模式修改为<code>production</code></li>\n</ul>\n<h3 id=\"entry指定打包入口\"><a href=\"#entry指定打包入口\" class=\"headerlink\" title=\"entry指定打包入口\"></a>entry指定打包入口</h3><ul>\n<li>表示要处理的那个文件</li>\n<li>使用path模块<code>path.join(__dirname, &#39;&#39;)</code></li>\n</ul>\n<h3 id=\"output指定打包出口\"><a href=\"#output指定打包出口\" class=\"headerlink\" title=\"output指定打包出口\"></a>output指定打包出口</h3><ul>\n<li>数据类型对象 <code>path</code> 指定存放的目录 <code>filename</code> 生成的文件名</li>\n</ul>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><ul>\n<li>安装<code>webpack-dev-server@3.11.2 -D</code> 实现实时自动打包</li>\n<li>将打包的文件生成到内存中, 不是物理磁盘中</li>\n<li>使用时将srcipt中的地址改为根目录<code>/</code>使用地址<code>http://localhost:8080</code>访问</li>\n</ul>\n<h3 id=\"安装html-webpack-plugin\"><a href=\"#安装html-webpack-plugin\" class=\"headerlink\" title=\"安装html-webpack-plugin\"></a>安装html-webpack-plugin</h3><ul>\n<li><code>npm i html-webpack-plugin@5.3.2 -D</code></li>\n<li>把指定的页面加入复制到根目录, 内存中</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 导入html-webpack-plugin </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 创建插件的实例对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> html = <span class=\"keyword\">new</span> HtmlPlugin(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制的页面</span></span><br><span class=\"line\">  template: <span class=\"string\">&#x27;./src/index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制出来的文件名和存档路径</span></span><br><span class=\"line\">  filename: <span class=\"string\">&#x27;./index.html&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">&#x27;development&#x27;</span>, <span class=\"comment\">//productions,</span></span><br><span class=\"line\">  entry: path.join(__dirname, <span class=\"string\">&#x27;./src/index.js&#x27;</span>),</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.join(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">&#x27;main.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [html]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"devSever-节点\"><a href=\"#devSever-节点\" class=\"headerlink\" title=\"devSever 节点\"></a>devSever 节点</h3><ul>\n<li>自动打开生成的网站, 展示网页效果</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  port: <span class=\"number\">9090</span>, <span class=\"comment\">//自定义端口号</span></span><br><span class=\"line\">  host: <span class=\"string\">&#x27;127.0.0.1&#x27;</span> <span class=\"comment\">// 指定打开地址</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"loader-加载器\"><a href=\"#loader-加载器\" class=\"headerlink\" title=\"loader 加载器\"></a>loader 加载器</h2><ul>\n<li>处理非<code>.js</code>文件</li>\n<li>打包处理css文件 <code>npm i style-loader@3.0.0 css-loader@5.2.6 -D</code></li>\n<li>当webpack发现某个文件处理不了的时候, 活查找webpack.confing.js这个配置文件中的module.rules数组中, 是否配置了对象的loader加载器</li>\n<li>打包处理less文件 <code>npm i less-loader@10.0.1 less@4.1.1 -D</code></li>\n<li>打包图片的路径 <code>npm i url-loader@4.1.1 file-loader@6.2.0 -D</code>  可传递参数 limit 加上参数<code>&lt;=limit</code>大小的图片 才会被转换成base64, 单位字节</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">  rules: [&#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">      use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">      use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>, <span class=\"string\">&#x27;less-loader&#x27;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: <span class=\"regexp\">/\\.(png|jpg|gif|jpeg)$/</span>,</span><br><span class=\"line\">      use: <span class=\"string\">&#x27;url-loader&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用<code>babel-loader</code>对js进行打包处理, 处理webpack无法处理的js高级语法 <code>npm i babel-loader@8.2.2 @babel/core@7.14.6 @babel/plugin-proposal-decorators@7.14.5 -D</code> 在根目录下创建一个babel.config.js文件 将插件配置写入 <code>[[&quot;@babel/plugin-proposal-decorators&quot;, &#123; &quot;legacy&quot;: true &#125;], [&quot;@babel/plugin-proposal-class-properties&quot;]]</code></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    [<span class=\"string\">&quot;@babel/plugin-proposal-decorators&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;legacy&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置build命令\"><a href=\"#配置build命令\" class=\"headerlink\" title=\"配置build命令\"></a>配置build命令</h2><ul>\n<li>创建一个scripts 脚本 <code>webpack --mode production</code></li>\n<li>将文件统一放到某个文件下 js配置path 图片在url中以地址方式传递outputPath参数</li>\n<li>使用<code>clean-webpack-plugin</code>插件将原来的dist文件先清理在生成</li>\n</ul>\n<h2 id=\"Source-Map\"><a href=\"#Source-Map\" class=\"headerlink\" title=\"Source Map\"></a>Source Map</h2><ul>\n<li>存储着原来的位置信息</li>\n<li>定位源代码的位置, 在配置文件中加入<code>devtool:&#39;evel-source-map&#39;</code> 开发环境下</li>\n<li>在发布项目时, 能定位行号, 但是不暴露源代码 <code>nosources-source-map</code> 生产环境下</li>\n<li>可以定位和显示源代码 使用<code>source-map</code></li>\n<li>@表示src源代码目录</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">  alias: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;@&quot;</span>: path.join(__dirname, <span class=\"string\">&#x27;./src/&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-config-js最终配置\"><a href=\"#webpack-config-js最终配置\" class=\"headerlink\" title=\"webpack.config.js最终配置\"></a>webpack.config.js最终配置</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 导入html-webpack-plugin </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 创建插件的实例对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> html = <span class=\"keyword\">new</span> HtmlPlugin(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制的页面</span></span><br><span class=\"line\">  template: <span class=\"string\">&#x27;./src/index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 指定复制出来的文件名和存档路径</span></span><br><span class=\"line\">  filename: <span class=\"string\">&#x27;./index.html&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">  CleanWebpackPlugin</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  devtool: <span class=\"string\">&#x27;nosources-source-map&#x27;</span>, <span class=\"comment\">// eval-source-map</span></span><br><span class=\"line\">  mode: <span class=\"string\">&#x27;development&#x27;</span>, <span class=\"comment\">//productions,</span></span><br><span class=\"line\">  entry: path.join(__dirname, <span class=\"string\">&#x27;./src/index.js&#x27;</span>),</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.join(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">&#x27;js/main.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [html, <span class=\"keyword\">new</span> CleanWebpackPlugin()],</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    port: <span class=\"number\">9090</span>, <span class=\"comment\">//自定义端口号</span></span><br><span class=\"line\">    host: <span class=\"string\">&#x27;127.0.0.1&#x27;</span> <span class=\"comment\">// 指定打开地址</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [&#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>, <span class=\"string\">&#x27;less-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(png|jpg|gif|jpeg)$/</span>,</span><br><span class=\"line\">        use: <span class=\"string\">&#x27;url-loader?limit=447&amp;outputPath=images&#x27;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 处理高级的js语法</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">        exclude: <span class=\"string\">&#x27;/node_modules/&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;@&quot;</span>: path.join(__dirname, <span class=\"string\">&#x27;./src/&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"web","path":"api/categories/web.json"},{"name":"webpack","path":"api/categories/webpack.json"}],"tags":[]}